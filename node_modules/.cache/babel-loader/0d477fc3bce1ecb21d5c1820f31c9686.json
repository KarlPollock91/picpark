{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KarlP\\\\new-app\\\\client\\\\src\\\\components\\\\thumbnails\\\\Avatar.js\",\n    _s = $RefreshSig$();\n\n//Written by Karl Pollock, 2022.\n//KarlPollock91@gmail.com\n//www.karlpollock.com\n//Avatar.js is a component used in thumbnails to display an image from the server in an avatar format.\nimport React, { useEffect, useState } from 'react';\nimport '../css/Thumbnail.css';\nimport axios from 'axios';\nimport * as Constants from '../../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Avatar(props) {\n  _s();\n\n  const [avatarDataId, setAvatarDataId] = useState(); //Component hook to retrieve the image from the server.\n\n  useEffect(() => {\n    if (props.avatarPostId != null) {\n      axios.get(`${Constants.SERVER_URL}/files/getImageFromPost/${props.avatarPostId}`, {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"authToken\")\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          setAvatarDataId(res.data.dataId);\n        }\n      }).catch(err => {});\n    }\n  }, [props.avatarPostId]);\n  return /*#__PURE__*/_jsxDEV(\"img\", {\n    alt: \"User avatar\",\n    style: {\n      borderRadius: '50%',\n      objectFit: 'cover',\n      height: props.large ? '150px' : '50px',\n      width: props.large ? '150px' : '50px'\n    },\n    className: \"thumbnail-image\",\n    src: props.localPreview ? props.localPreview : avatarDataId ? `${Constants.SERVER_URL}/files/image/${avatarDataId}` : `${process.env.PUBLIC_URL}/images/server_default.png`\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Avatar, \"7Wy++DMC5I2B9Fgn70owo6mCO6g=\");\n\n_c = Avatar;\nexport default Avatar;\n\nvar _c;\n\n$RefreshReg$(_c, \"Avatar\");","map":{"version":3,"sources":["C:/Users/KarlP/new-app/client/src/components/thumbnails/Avatar.js"],"names":["React","useEffect","useState","axios","Constants","Avatar","props","avatarDataId","setAvatarDataId","avatarPostId","get","SERVER_URL","headers","localStorage","getItem","then","res","status","data","dataId","catch","err","borderRadius","objectFit","height","large","width","localPreview","process","env","PUBLIC_URL"],"mappings":";;;AAAA;AACA;AACA;AAEA;AAEA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAO,sBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,KAAKC,SAAZ,MAA2B,uBAA3B;;;AAEA,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AAAA;;AAEnB,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCN,QAAQ,EAAhD,CAFmB,CAInB;;AACAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,KAAK,CAACG,YAAN,IAAsB,IAA1B,EAAgC;AAC5BN,MAAAA,KAAK,CAACO,GAAN,CAAW,GAAEN,SAAS,CAACO,UAAW,2BAA0BL,KAAK,CAACG,YAAa,EAA/E,EAAkF;AAACG,QAAAA,OAAO,EACtF;AACA,4BAAkBC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADlB;AAD8E,OAAlF,EAKCC,IALD,CAKOC,GAAD,IAAS;AACX,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpBT,UAAAA,eAAe,CAACQ,GAAG,CAACE,IAAJ,CAASC,MAAV,CAAf;AACH;AACJ,OATD,EASGC,KATH,CASUC,GAAD,IAAS,CACjB,CAVD;AAWH;AACJ,GAdQ,EAcN,CAACf,KAAK,CAACG,YAAP,CAdM,CAAT;AAgBA,sBACI;AAAK,IAAA,GAAG,EAAC,aAAT;AAAuB,IAAA,KAAK,EAAE;AAACa,MAAAA,YAAY,EAAC,KAAd;AAAqBC,MAAAA,SAAS,EAAC,OAA/B;AAAwCC,MAAAA,MAAM,EAAElB,KAAK,CAACmB,KAAN,GAAc,OAAd,GAAwB,MAAxE;AAAgFC,MAAAA,KAAK,EAAEpB,KAAK,CAACmB,KAAN,GAAc,OAAd,GAAwB;AAA/G,KAA9B;AACI,IAAA,SAAS,EAAC,iBADd;AAEI,IAAA,GAAG,EAAEnB,KAAK,CAACqB,YAAN,GAAqBrB,KAAK,CAACqB,YAA3B,GACApB,YAAY,GAAI,GAAEH,SAAS,CAACO,UAAW,gBAAeJ,YAAa,EAAvD,GAA4D,GAAEqB,OAAO,CAACC,GAAR,CAAYC,UAAW;AAH1G;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GA3BQzB,M;;KAAAA,M;AA6BT,eAAeA,MAAf","sourcesContent":["//Written by Karl Pollock, 2022.\r\n//KarlPollock91@gmail.com\r\n//www.karlpollock.com\r\n\r\n//Avatar.js is a component used in thumbnails to display an image from the server in an avatar format.\r\n\r\nimport React, {useEffect, useState} from 'react';\r\nimport '../css/Thumbnail.css';\r\nimport axios from 'axios'\r\n\r\nimport * as Constants from '../../utils/constants';\r\n\r\nfunction Avatar(props) {\r\n\r\n    const [avatarDataId, setAvatarDataId] = useState();\r\n\r\n    //Component hook to retrieve the image from the server.\r\n    useEffect(() => {\r\n        if (props.avatarPostId != null) {\r\n            axios.get(`${Constants.SERVER_URL}/files/getImageFromPost/${props.avatarPostId}`, {headers: \r\n                {\r\n                \"x-access-token\": localStorage.getItem(\"authToken\")\r\n                }\r\n            })\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    setAvatarDataId(res.data.dataId);\r\n                }\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    }, [props.avatarPostId]);\r\n\r\n    return(\r\n        <img alt=\"User avatar\" style={{borderRadius:'50%', objectFit:'cover', height: props.large ? '150px' : '50px', width: props.large ? '150px' : '50px'}} \r\n            className=\"thumbnail-image\" \r\n            src={props.localPreview ? props.localPreview :\r\n                (avatarDataId ? `${Constants.SERVER_URL}/files/image/${avatarDataId}` : `${process.env.PUBLIC_URL}/images/server_default.png`)}/>\r\n    );\r\n}\r\n\r\nexport default Avatar;"]},"metadata":{},"sourceType":"module"}