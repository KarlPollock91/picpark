{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KarlP\\\\new-app\\\\client\\\\src\\\\components\\\\LeftSidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport ServerThumbnail from './ServerThumbnail';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction LeftSidebar(props) {\n  _s();\n\n  const [serverThumbnails, setServerThumbnails] = useState([]);\n  useEffect(() => {\n    axios.get(`http://localhost:5000/account/userServers`, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"authToken\")\n      }\n    }).then(res => {\n      setServerThumbnails([...serverThumbnails, ...res.data]);\n    });\n  }, []); //Calls back to App, which will render ServerCreation instead of Main.\n\n  const newServer = () => {\n    props.setComponentDisplay(1);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"button\",\n      class: \"btn btn-outline-primary\",\n      onClick: newServer,\n      children: [/*#__PURE__*/_jsxDEV(\"i\", {\n        class: \"bi bi-plus-circle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 87\n      }, this), \" Create new server\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"list-group\",\n      children: serverThumbnails.map((el, i) => /*#__PURE__*/_jsxDEV(ServerThumbnail, {\n        serverId: el._id,\n        serverName: el.serverName,\n        thumbnailDataId: el.thumbnailDataId,\n        changeServerCallback: props.changeServerCallback\n      }, el._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n\n_s(LeftSidebar, \"SiMg4Dqy4CoxChn+0J0XsGcxiiY=\");\n\n_c = LeftSidebar;\nexport default LeftSidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"LeftSidebar\");","map":{"version":3,"sources":["C:/Users/KarlP/new-app/client/src/components/LeftSidebar.js"],"names":["React","useEffect","useState","ServerThumbnail","axios","LeftSidebar","props","serverThumbnails","setServerThumbnails","get","headers","localStorage","getItem","then","res","data","newServer","setComponentDisplay","map","el","i","_id","serverName","thumbnailDataId","changeServerCallback"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AAAA;;AAExB,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CN,QAAQ,CAAC,EAAD,CAAxD;AAIAD,EAAAA,SAAS,CAAC,MAAM;AACZG,IAAAA,KAAK,CAACK,GAAN,CAAW,2CAAX,EAAuD;AAACC,MAAAA,OAAO,EAC3D;AACA,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADlB;AADmD,KAAvD,EAKCC,IALD,CAKOC,GAAD,IAAS;AACXN,MAAAA,mBAAmB,CAAC,CAAC,GAAGD,gBAAJ,EAAsB,GAAGO,GAAG,CAACC,IAA7B,CAAD,CAAnB;AACH,KAPD;AAQH,GATQ,EASN,EATM,CAAT,CANwB,CAkBxB;;AACA,QAAMC,SAAS,GAAG,MAAM;AACpBV,IAAAA,KAAK,CAACW,mBAAN,CAA0B,CAA1B;AACH,GAFD;;AAIA,sBAEI;AAAK,IAAA,SAAS,EAAC,EAAf;AAAA,4BACI;AAAQ,MAAA,IAAI,EAAC,QAAb;AAAsB,MAAA,KAAK,EAAC,yBAA5B;AAAsD,MAAA,OAAO,EAAED,SAA/D;AAAA,8BAA0E;AAAG,QAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,cAA1E;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAI,MAAA,SAAS,EAAC,YAAd;AAAA,gBACKT,gBAAgB,CAACW,GAAjB,CAAqB,CAACC,EAAD,EAAKC,CAAL,kBAClB,QAAC,eAAD;AAAiB,QAAA,QAAQ,EAAED,EAAE,CAACE,GAA9B;AAAmC,QAAA,UAAU,EAAEF,EAAE,CAACG,UAAlD;AAA8D,QAAA,eAAe,EAAEH,EAAE,CAACI,eAAlF;AAAgH,QAAA,oBAAoB,EAAEjB,KAAK,CAACkB;AAA5I,SAAwGL,EAAE,CAACE,GAA3G;AAAA;AAAA;AAAA;AAAA,cADH;AADL;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAYH;;GAnCQhB,W;;KAAAA,W;AAqCT,eAAeA,WAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport ServerThumbnail from './ServerThumbnail';\r\nimport axios from 'axios'\r\n\r\nfunction LeftSidebar(props) {\r\n\r\n    const [serverThumbnails, setServerThumbnails] = useState([]);\r\n\r\n    \r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5000/account/userServers`, {headers: \r\n            {\r\n            \"x-access-token\": localStorage.getItem(\"authToken\")\r\n            }\r\n        })\r\n        .then((res) => {\r\n            setServerThumbnails([...serverThumbnails, ...res.data]);\r\n        });\r\n    }, []);\r\n\r\n\r\n    //Calls back to App, which will render ServerCreation instead of Main.\r\n    const newServer = () => {\r\n        props.setComponentDisplay(1);\r\n    }\r\n\r\n    return(\r\n\r\n        <div className=\"\">\r\n            <button type=\"button\" class=\"btn btn-outline-primary\" onClick={newServer}><i class=\"bi bi-plus-circle\"></i> Create new server</button>\r\n            <ul className=\"list-group\">\r\n                {serverThumbnails.map((el, i) => (\r\n                    <ServerThumbnail serverId={el._id} serverName={el.serverName} thumbnailDataId={el.thumbnailDataId} key={el._id} changeServerCallback={props.changeServerCallback}/>\r\n                ))}\r\n            </ul>\r\n        </div>\r\n    )\r\n    \r\n} \r\n\r\nexport default LeftSidebar;"]},"metadata":{},"sourceType":"module"}