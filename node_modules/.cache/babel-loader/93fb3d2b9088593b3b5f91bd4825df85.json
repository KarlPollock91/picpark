{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KarlP\\\\new-app\\\\client\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport LeftSidebar from './LeftSidebar';\nimport Main from './Main';\nimport RightSidebar from './RightSidebar';\nimport Loading from './Loading';\nimport Login from './Login';\nimport ServerCreation from './ServerCreation';\nimport PostCreation from './PostCreation';\nimport ViewPost from './ViewPost';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentServerId, setCurrentServerId] = useState(null);\n  const [viewPostId, setViewPostId] = useState(); // {\n  //     username\n  //     _id\n  //     avatarPostId\n  // });\n\n  const [userInfo, setUserInfo] = useState(); //0 - main\n  //1 - create server\n  //2 - new post\n  //3 - view post\n\n  const [componentDisplay, setComponentDisplay] = useState(0);\n  useEffect(() => {\n    if (!localStorage.getItem(\"authToken\")) {\n      setLoading(false);\n      setLoggedIn(false);\n    } else {\n      verifyAuth();\n    }\n  }, []);\n\n  const verifyAuth = () => {\n    axios.get('http://localhost:5000/account/verifyAuth', {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"authToken\") // \"Access-Control-Allow-Origin\": \"*\"\n\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        setCurrentServerId(localStorage.getItem(\"mostRecentServer\"));\n        setUserInfo(res.data);\n        setLoggedIn(true);\n      }\n    }).catch(err => {\n      localStorage.clear();\n    });\n  }; //Log out user\n\n\n  const logout = () => {\n    localStorage.clear();\n    setLoading(true);\n    setLoggedIn(false);\n  }; //This one exists to force a rerender of LeftSidebar once a new server has been created.\n  //Doesn't seem like the right way to do it but I can't think of anything better.\n\n\n  const [newServer, setNewServer] = useState(false);\n\n  const refreshLeftSidebar = () => {\n    console.log(\"refresh called\");\n    setNewServer(!newServer);\n  }; //Changes the server the user is viewing and updates cookies.\n\n\n  const changeServer = serverId => {\n    localStorage.setItem(\"mostRecentServer\", serverId);\n    setCurrentServerId(serverId);\n  }; //Switch to post creation mode\n\n\n  const enterPostCreation = () => {\n    setComponentDisplay(2);\n  }; //Switch to view post mode with postId\n\n\n  const viewPost = postId => {\n    setViewPostId(postId);\n    setComponentDisplay(3);\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper w-100 h-100 mw-100 mh-100\",\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 13\n    }, this);\n  } else if (loggedIn) {\n    var component = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"An error has occured\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }, this);\n\n    if (componentDisplay === 0 && currentServerId != null) {\n      component = /*#__PURE__*/_jsxDEV(Main, {\n        currentServerId: currentServerId,\n        viewPost: viewPost,\n        enterPostCreation: enterPostCreation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 25\n      }, this);\n    } else if (componentDisplay === 1) {\n      component = /*#__PURE__*/_jsxDEV(ServerCreation, {\n        refreshLeftSidebar: refreshLeftSidebar,\n        setComponentDisplay: setComponentDisplay,\n        changeServer: changeServer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 25\n      }, this);\n    } else if (componentDisplay === 2) {\n      component = /*#__PURE__*/_jsxDEV(PostCreation, {\n        setComponentDisplay: setComponentDisplay,\n        currentServerId: currentServerId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 25\n      }, this);\n    } else if (componentDisplay === 3) {\n      component = /*#__PURE__*/_jsxDEV(ViewPost, {\n        setComponentDisplay: setComponentDisplay,\n        postId: viewPostId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 25\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 h-100 container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col border border-secondary full-height\",\n          children: /*#__PURE__*/_jsxDEV(LeftSidebar, {\n            newServer: newServer,\n            setComponentDisplay: setComponentDisplay,\n            changeServerCallback: changeServer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col-7 border border-secondary full-height\",\n          children: component\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col border border-secondary\",\n          children: /*#__PURE__*/_jsxDEV(RightSidebar, {\n            currentServerId: currentServerId,\n            userInfo: userInfo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper w-100 h-100\",\n      children: /*#__PURE__*/_jsxDEV(Login, {\n        verifyAuth: verifyAuth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(App, \"F7jUGakHR7JH1xg3xpydDLeAyZ0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/KarlP/new-app/client/src/components/App.js"],"names":["React","useState","useEffect","axios","LeftSidebar","Main","RightSidebar","Loading","Login","ServerCreation","PostCreation","ViewPost","App","props","loading","setLoading","loggedIn","setLoggedIn","currentServerId","setCurrentServerId","viewPostId","setViewPostId","userInfo","setUserInfo","componentDisplay","setComponentDisplay","localStorage","getItem","verifyAuth","get","headers","then","res","status","data","catch","err","clear","logout","newServer","setNewServer","refreshLeftSidebar","console","log","changeServer","serverId","setItem","enterPostCreation","viewPost","postId","component"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\nimport LeftSidebar from './LeftSidebar';\r\nimport Main from './Main';\r\nimport RightSidebar from './RightSidebar';\r\nimport Loading from './Loading';\r\nimport Login from './Login';\r\nimport ServerCreation from './ServerCreation';\r\nimport PostCreation from './PostCreation';\r\nimport ViewPost from './ViewPost'\r\n\r\n\r\nfunction App(props) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const [currentServerId, setCurrentServerId] = useState(null);\r\n    const [viewPostId, setViewPostId] = useState();\r\n\r\n    // {\r\n    //     username\r\n    //     _id\r\n    //     avatarPostId\r\n    // });\r\n    const [userInfo, setUserInfo] = useState();\r\n\r\n\r\n    //0 - main\r\n    //1 - create server\r\n    //2 - new post\r\n    //3 - view post\r\n    const [componentDisplay, setComponentDisplay] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem(\"authToken\")){\r\n            setLoading(false);\r\n            setLoggedIn(false);\r\n        } else {\r\n            verifyAuth();\r\n        }\r\n    }, [])\r\n\r\n\r\n    const verifyAuth = () => {\r\n        axios.get('http://localhost:5000/account/verifyAuth', {\r\n            headers: {\r\n                \"x-access-token\": localStorage.getItem(\"authToken\")\r\n                // \"Access-Control-Allow-Origin\": \"*\"\r\n            }\r\n            }).then((res) => {\r\n                if (res.status === 200) {\r\n\r\n                    setCurrentServerId(localStorage.getItem(\"mostRecentServer\"));\r\n                    setUserInfo(res.data)\r\n                    setLoggedIn(true);\r\n\r\n                }\r\n            }).catch((err) => {\r\n                localStorage.clear();\r\n            });\r\n    }\r\n\r\n    //Log out user\r\n    const logout = () => {\r\n        localStorage.clear();\r\n        setLoading(true);\r\n        setLoggedIn(false);\r\n    }\r\n\r\n    \r\n    //This one exists to force a rerender of LeftSidebar once a new server has been created.\r\n    //Doesn't seem like the right way to do it but I can't think of anything better.\r\n    const [newServer, setNewServer] = useState(false);\r\n\r\n    const refreshLeftSidebar = () => {\r\n        console.log(\"refresh called\");\r\n        setNewServer(!newServer);\r\n    }\r\n\r\n    //Changes the server the user is viewing and updates cookies.\r\n    const changeServer = (serverId) => {\r\n        localStorage.setItem(\"mostRecentServer\", serverId);\r\n        setCurrentServerId(serverId);\r\n    }\r\n\r\n    //Switch to post creation mode\r\n    const enterPostCreation = () => {\r\n        setComponentDisplay(2);\r\n    }\r\n\r\n    //Switch to view post mode with postId\r\n    const viewPost = (postId) => {\r\n        setViewPostId(postId);\r\n        setComponentDisplay(3);\r\n    }\r\n\r\n\r\n    if (loading) {\r\n        return(\r\n            <div className=\"wrapper w-100 h-100 mw-100 mh-100\">\r\n                <Loading/>\r\n            </div>\r\n        )\r\n    } else if (loggedIn) {\r\n        var component = <div>An error has occured</div>;\r\n\r\n        if (componentDisplay === 0 && (currentServerId != null)) {\r\n            component = <Main currentServerId={currentServerId} viewPost={viewPost} enterPostCreation={enterPostCreation}/>\r\n        } else if (componentDisplay === 1) {\r\n            component = <ServerCreation refreshLeftSidebar={refreshLeftSidebar} setComponentDisplay={setComponentDisplay} changeServer={changeServer}/>\r\n        } else if (componentDisplay === 2) {\r\n            component = <PostCreation setComponentDisplay={setComponentDisplay} currentServerId={currentServerId}/>\r\n        } else if (componentDisplay === 3) {\r\n            component = <ViewPost setComponentDisplay={setComponentDisplay} postId={viewPostId}/>\r\n        }\r\n\r\n        return(\r\n            <div className=\"w-100 h-100 container-fluid\">\r\n                <div className=\"row\">\r\n                    <div  className=\"col border border-secondary full-height\">\r\n                        <LeftSidebar newServer={newServer} setComponentDisplay={setComponentDisplay} changeServerCallback={changeServer}/>\r\n                    </div>\r\n                    <div className=\"col-7 border border-secondary full-height\">\r\n                        {component}\r\n                    </div>\r\n                    <div  className=\"col border border-secondary\">\r\n                        <RightSidebar currentServerId={currentServerId} userInfo={userInfo}/>\r\n                    </div>\r\n                </div>\r\n                {/* <button type=\"button\" class=\"btn btn-outline-primary\" onClick={logout}>Log Out</button> */}\r\n            </div>\r\n        )\r\n\r\n    } else {\r\n        return(\r\n            <div className=\"wrapper w-100 h-100\">\r\n                <Login verifyAuth={verifyAuth}/>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n} \r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}