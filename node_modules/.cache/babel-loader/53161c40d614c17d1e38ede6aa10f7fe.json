{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KarlP\\\\new-app\\\\client\\\\src\\\\components\\\\thumbnails\\\\ServerThumbnail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport * as Constants from '../../utils/constants';\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\nimport Avatar from '../thumbnails/Avatar';\nimport Loading from '../secondary/Loading';\nimport '../css/Thumbnail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ServerThumbnail(props) {\n  _s();\n\n  const navigate = useNavigate();\n  const [server, setServer] = useState({});\n  useEffect(() => {\n    if (props.serverId != null) {\n      axios.get(`${Constants.SERVER_URL}/servers/getServer/${props.serverId}`, {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"authToken\")\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          setServer(res.data.serverObject);\n        }\n      }).catch(err => {//do nothing\n      });\n    }\n  }, [props.serverId, props.newServer, props.permissionObject]);\n\n  const handleSelect = e => {\n    if (e === \"view\") {\n      navigate(`/serverInfo/${server._id}`);\n    } else if (e === \"visit\") {\n      navigate(`/s/${server._id}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container thumbnail-wrapper w-90 my-1\",\n    children: server ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row h-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 my-auto\",\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          avatarPostId: server.avatarPostId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 my-auto\",\n        children: server.serverName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n          className: \"m-2\",\n          title: \"\",\n          id: \"dropdown-basic-button\",\n          variant: \"secondary\",\n          size: \"sm\",\n          onSelect: handleSelect,\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"visit\",\n            children: \"Visit Server\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"view\",\n            children: \"Server Information\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ServerThumbnail, \"cbE8eXEycdWJm17+a6oYYmfCOGI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ServerThumbnail;\nexport default ServerThumbnail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServerThumbnail\");","map":{"version":3,"sources":["C:/Users/KarlP/new-app/client/src/components/thumbnails/ServerThumbnail.js"],"names":["React","useEffect","useState","useNavigate","axios","Constants","Dropdown","DropdownButton","Avatar","Loading","ServerThumbnail","props","navigate","server","setServer","serverId","get","SERVER_URL","headers","localStorage","getItem","then","res","status","data","serverObject","catch","err","newServer","permissionObject","handleSelect","e","_id","avatarPostId","serverName"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport * as Constants from '../../utils/constants';\r\nimport {Dropdown, DropdownButton} from 'react-bootstrap';\r\nimport Avatar from '../thumbnails/Avatar';\r\nimport Loading from '../secondary/Loading';\r\n\r\nimport '../css/Thumbnail.css';\r\n\r\nfunction ServerThumbnail(props) {\r\n\r\n    const navigate = useNavigate();\r\n    const [server, setServer] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (props.serverId != null) {\r\n            axios.get(`${Constants.SERVER_URL}/servers/getServer/${props.serverId}`, {headers: \r\n                {\r\n                    \"x-access-token\": localStorage.getItem(\"authToken\")\r\n                }\r\n            })\r\n            .then((res) => {\r\n                if (res.status === 200){\r\n                    setServer(res.data.serverObject); \r\n                }\r\n            }).catch((err) => {\r\n                //do nothing\r\n            });\r\n        }\r\n    }, [props.serverId, props.newServer, props.permissionObject]);\r\n\r\n\r\n\r\n    const handleSelect = (e) => {\r\n        if (e === \"view\"){\r\n            navigate(`/serverInfo/${server._id}`);\r\n        } else if (e === \"visit\") {\r\n            navigate(`/s/${server._id}`);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"container thumbnail-wrapper w-90 my-1\">\r\n           {server ?\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-4 my-auto\">\r\n                        <Avatar avatarPostId={server.avatarPostId}/>\r\n                    </div>\r\n                    <div className=\"col-md-6 my-auto\">\r\n                        {server.serverName}\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                        <DropdownButton className=\"m-2\" title=\"\" id=\"dropdown-basic-button\" variant=\"secondary\" size=\"sm\" onSelect={handleSelect}>\r\n                            <Dropdown.Item eventKey=\"visit\">Visit Server</Dropdown.Item>\r\n                            <Dropdown.Item eventKey=\"view\">Server Information</Dropdown.Item>\r\n                        </DropdownButton>\r\n                    </div>\r\n                </div>\r\n            : <Loading/>}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ServerThumbnail;"]},"metadata":{},"sourceType":"module"}