{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KarlP\\\\new-app\\\\client\\\\src\\\\components\\\\thumbnails\\\\ServerThumbnail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport '../css/Thumbnail.css';\nimport Avatar from '../thumbnails/Avatar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ServerThumbnail(props) {\n  _s();\n\n  const navigate = useNavigate();\n  const [server, setServer] = useState({});\n  useEffect(() => {\n    if (props.permissionObject != null) {\n      axios.get(`http://localhost:5000/servers/getServer/${props.permissionObject.serverId}`, {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"authToken\")\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          setServer(res.data);\n        }\n      });\n    }\n  }, []);\n\n  const clickedThumbnail = e => {\n    navigate(`/s/${server._id}`);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container thumbnail-wrapper w-90\",\n    children: profile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row h-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 my-auto\",\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          avatarPostId: server.avatarPostId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 my-auto\",\n        children: server.serverName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n          className: \"m-2\",\n          title: \"\",\n          id: \"dropdown-basic-button\",\n          variant: \"secondary\",\n          size: \"sm\",\n          onSelect: handleSelect,\n          children: /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"view\",\n            children: \"View Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ServerThumbnail, \"cbE8eXEycdWJm17+a6oYYmfCOGI=\", false, function () {\n  return [useNavigate];\n});\n\n_c = ServerThumbnail;\nexport default ServerThumbnail;\n\nvar _c;\n\n$RefreshReg$(_c, \"ServerThumbnail\");","map":{"version":3,"sources":["C:/Users/KarlP/new-app/client/src/components/thumbnails/ServerThumbnail.js"],"names":["React","useEffect","useState","useNavigate","axios","Avatar","ServerThumbnail","props","navigate","server","setServer","permissionObject","get","serverId","headers","localStorage","getItem","then","res","status","data","clickedThumbnail","e","_id","profile","avatarPostId","serverName","handleSelect"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,WAAT,QAA4B,kBAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;;;AAEA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAE5B,QAAMC,QAAQ,GAAGL,WAAW,EAA5B;AACA,QAAM,CAACM,MAAD,EAASC,SAAT,IAAsBR,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,KAAK,CAACI,gBAAN,IAA0B,IAA9B,EAAoC;AAChCP,MAAAA,KAAK,CAACQ,GAAN,CAAW,2CAA0CL,KAAK,CAACI,gBAAN,CAAuBE,QAAS,EAArF,EAAwF;AAACC,QAAAA,OAAO,EAC5F;AACI,4BAAkBC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADtB;AADoF,OAAxF,EAKCC,IALD,CAKOC,GAAD,IAAS;AACX,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAuB;AACnBT,UAAAA,SAAS,CAACQ,GAAG,CAACE,IAAL,CAAT;AACH;AACJ,OATD;AAUH;AACJ,GAbQ,EAaN,EAbM,CAAT;;AAeA,QAAMC,gBAAgB,GAAIC,CAAD,IAAO;AAC5Bd,IAAAA,QAAQ,CAAE,MAAKC,MAAM,CAACc,GAAI,EAAlB,CAAR;AACH,GAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,kCAAf;AAAA,cACIC,OAAO,gBACH;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,+BACI,QAAC,MAAD;AAAQ,UAAA,YAAY,EAAEf,MAAM,CAACgB;AAA7B;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,kBAAf;AAAA,kBACKhB,MAAM,CAACiB;AADZ;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI,QAAC,cAAD;AAAgB,UAAA,SAAS,EAAC,KAA1B;AAAgC,UAAA,KAAK,EAAC,EAAtC;AAAyC,UAAA,EAAE,EAAC,uBAA5C;AAAoE,UAAA,OAAO,EAAC,WAA5E;AAAwF,UAAA,IAAI,EAAC,IAA7F;AAAkG,UAAA,QAAQ,EAAEC,YAA5G;AAAA,iCACI,QAAC,QAAD,CAAU,IAAV;AAAe,YAAA,QAAQ,EAAC,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,gBAcL,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAfN;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GA5CQrB,e;UAEYH,W;;;KAFZG,e;AA8CT,eAAeA,eAAf","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport '../css/Thumbnail.css';\r\nimport Avatar from '../thumbnails/Avatar';\r\n\r\nfunction ServerThumbnail(props) {\r\n\r\n    const navigate = useNavigate();\r\n    const [server, setServer] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (props.permissionObject != null) {\r\n            axios.get(`http://localhost:5000/servers/getServer/${props.permissionObject.serverId}`, {headers: \r\n                {\r\n                    \"x-access-token\": localStorage.getItem(\"authToken\")\r\n                }\r\n            })\r\n            .then((res) => {\r\n                if (res.status === 200){\r\n                    setServer(res.data); \r\n                }\r\n            });\r\n        }\r\n    }, []);\r\n\r\n    const clickedThumbnail = (e) => {\r\n        navigate(`/s/${server._id}`);\r\n    }\r\n\r\n    return(\r\n        <div className=\"container thumbnail-wrapper w-90\">\r\n           {profile ?\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-4 my-auto\">\r\n                        <Avatar avatarPostId={server.avatarPostId}/>\r\n                    </div>\r\n                    <div className=\"col-md-6 my-auto\">\r\n                        {server.serverName}\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                        <DropdownButton className=\"m-2\" title=\"\" id=\"dropdown-basic-button\" variant=\"secondary\" size=\"sm\" onSelect={handleSelect}>\r\n                            <Dropdown.Item eventKey=\"view\">View Profile</Dropdown.Item>\r\n                        </DropdownButton>\r\n                    </div>\r\n                </div>\r\n            : <Loading/>}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default ServerThumbnail;"]},"metadata":{},"sourceType":"module"}