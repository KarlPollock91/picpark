{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KarlP\\\\new-app\\\\client\\\\src\\\\components\\\\thumbnails\\\\UserThumbnail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\nimport Avatar from '../thumbnails/Avatar';\nimport Loading from '../secondary/Loading';\nimport '../css/Thumbnail.css';\nimport * as Constants from '../../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction UserThumbnail(props) {\n  _s();\n\n  const [profile, setProfile] = useState(null); //The current user\n\n  const [userId, setUserId] = useState(null); //Server permissions for the user thumbnail user\n\n  const [serverPermission, setServerPermission] = useState(null);\n  const navigate = useNavigate(); //this component is always going to be attached to a server, you're not implementing friends or anything like that\n\n  useEffect(() => {\n    if (props.userId != null) {\n      axios.get(`${Constants.SERVER_URL}/accounts/getUser/${props.userId}`, {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"authToken\")\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          setProfile(res.data.profileObject);\n          setUserId(res.data.userId);\n        }\n      });\n    }\n  }, [props.userThumbnail, props.userId]);\n  useEffect(() => {\n    if (props.serverId && props.userId != null) {\n      axios.get(`${Constants.SERVER_URL}/servers/userPermissions/${props.serverId}/${props.userId}`, {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"authToken\")\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          setServerPermission(res.data.permissions);\n        }\n      });\n    }\n  }, [props.userId]); //Handles the drop down menu for the post.\n\n  const handleSelect = e => {\n    if (e === \"view\") {\n      navigate(`/profile/${profile._id}`);\n    } else if (e === \"status\") {\n      props.changeRankCallback(profile._id, profile.username, serverPermission);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container thumbnail-wrapper w-90\",\n    children: profile ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row h-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4 my-auto\",\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          avatarPostId: profile.avatarPostId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6 my-auto\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: profile.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), serverPermission ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row\",\n          children: Constants.USER_STATUS[serverPermission]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 29\n        }, this) : \"\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-2\",\n        children: /*#__PURE__*/_jsxDEV(DropdownButton, {\n          className: \"m-2\",\n          title: \"\",\n          id: \"dropdown-basic-button\",\n          variant: \"secondary\",\n          size: \"sm\",\n          onSelect: handleSelect,\n          children: [/*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"view\",\n            children: \"View Profile\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 29\n          }, this), props.serverId && props.userPermission >= 4 && props.userPermission >= serverPermission && userId != profile._id ? /*#__PURE__*/_jsxDEV(Dropdown.Item, {\n            eventKey: \"status\",\n            children: \"Change User Rank\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 33\n          }, this) : \"\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n\n_s(UserThumbnail, \"eEWg0CgZpIw78UYtFkkKkjGjy8w=\", false, function () {\n  return [useNavigate];\n});\n\n_c = UserThumbnail;\nexport default UserThumbnail;\n\nvar _c;\n\n$RefreshReg$(_c, \"UserThumbnail\");","map":{"version":3,"sources":["C:/Users/KarlP/new-app/client/src/components/thumbnails/UserThumbnail.js"],"names":["React","useEffect","useState","useNavigate","axios","Dropdown","DropdownButton","Avatar","Loading","Constants","UserThumbnail","props","profile","setProfile","userId","setUserId","serverPermission","setServerPermission","navigate","get","SERVER_URL","headers","localStorage","getItem","then","res","status","data","profileObject","userThumbnail","serverId","permissions","handleSelect","e","_id","changeRankCallback","username","avatarPostId","USER_STATUS","userPermission"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {Dropdown, DropdownButton} from 'react-bootstrap';\r\n\r\nimport Avatar from '../thumbnails/Avatar';\r\nimport Loading from '../secondary/Loading';\r\nimport '../css/Thumbnail.css';\r\n\r\nimport * as Constants from '../../utils/constants';\r\n\r\nfunction UserThumbnail(props) {\r\n\r\n    const [profile, setProfile] = useState(null);\r\n    //The current user\r\n    const [userId, setUserId] = useState(null);\r\n    //Server permissions for the user thumbnail user\r\n    const [serverPermission, setServerPermission] = useState(null);\r\n    const navigate = useNavigate();\r\n    \r\n\r\n    //this component is always going to be attached to a server, you're not implementing friends or anything like that\r\n\r\n    useEffect(() => {\r\n        if (props.userId != null) {\r\n            axios.get(`${Constants.SERVER_URL}/accounts/getUser/${props.userId}`, {headers: \r\n                {\r\n                \"x-access-token\": localStorage.getItem(\"authToken\")\r\n                }\r\n            })\r\n            .then((res) => {\r\n                if (res.status === 200){\r\n                    setProfile(res.data.profileObject);\r\n                    setUserId(res.data.userId);\r\n                }\r\n            });\r\n        }\r\n    }, [props.userThumbnail, props.userId]);\r\n\r\n    useEffect(() => {\r\n        if (props.serverId && props.userId != null) {\r\n            axios.get(`${Constants.SERVER_URL}/servers/userPermissions/${props.serverId}/${props.userId}`, {headers: \r\n                {\r\n                \"x-access-token\": localStorage.getItem(\"authToken\")\r\n                }\r\n            })\r\n            .then((res) => {\r\n                if (res.status === 200){\r\n                    setServerPermission(res.data.permissions);\r\n                }\r\n            });\r\n        }\r\n    }, [props.userId]);\r\n\r\n    //Handles the drop down menu for the post.\r\n    const handleSelect = (e) => {\r\n        if (e === \"view\"){\r\n            navigate(`/profile/${profile._id}`);\r\n        } else if (e === \"status\") {\r\n            props.changeRankCallback(profile._id, profile.username, serverPermission);\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"container thumbnail-wrapper w-90\">\r\n           {profile ?\r\n                <div className=\"row h-100\">\r\n                    <div className=\"col-md-4 my-auto\">\r\n                        <Avatar avatarPostId={profile.avatarPostId}/>\r\n                    </div>\r\n                    <div className=\"col-md-6 my-auto\">\r\n                        <div className=\"row\">\r\n                            {profile.username}\r\n                        </div>\r\n                        {serverPermission ? \r\n                            <div className=\"row\">\r\n                                {Constants.USER_STATUS[serverPermission]}\r\n                            </div>\r\n                        : \"\"}\r\n                    </div>\r\n                    <div className=\"col-md-2\">\r\n                        <DropdownButton className=\"m-2\" title=\"\" id=\"dropdown-basic-button\" variant=\"secondary\" size=\"sm\" onSelect={handleSelect}>\r\n                            <Dropdown.Item eventKey=\"view\">View Profile</Dropdown.Item>\r\n                            {(props.serverId) && (props.userPermission >= 4) && (props.userPermission >= serverPermission) && (userId != profile._id) ?\r\n                                <Dropdown.Item eventKey=\"status\">Change User Rank</Dropdown.Item> \r\n                                : \"\"\r\n                            }\r\n                        </DropdownButton>\r\n                    </div>\r\n                </div>\r\n            : <Loading/>}\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default UserThumbnail;"]},"metadata":{},"sourceType":"module"}