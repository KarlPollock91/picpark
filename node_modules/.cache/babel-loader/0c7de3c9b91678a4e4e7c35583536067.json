{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KarlP\\\\new-app\\\\client\\\\src\\\\components\\\\main\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Route, Routes } from 'react-router-dom';\nimport LeftSidebar from './LeftSidebar';\nimport Main from './Main';\nimport RightSidebar from './RightSidebar';\nimport Loading from '../secondary/Loading';\nimport Login from './Login';\nimport ServerCreation from './ServerCreation';\nimport PostCreation from './PostCreation';\nimport ViewPost from './ViewPost';\nimport ViewProfile from './ViewProfile';\nimport ViewServer from './ViewServer';\nimport SplashPage from './SplashPage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentServerId, setCurrentServerId] = useState(null); // {\n  //     username\n  //     _id\n  //     avatarPostId\n  // });\n\n  const [userInfo, setUserInfo] = useState(); //0 - main\n  //1 - create server\n  //2 - new post\n  //3 - view post\n\n  useEffect(() => {\n    if (!localStorage.getItem(\"authToken\")) {\n      setLoading(false);\n      setLoggedIn(false);\n    } else {\n      verifyAuth();\n    }\n  }, []);\n\n  const verifyAuth = () => {\n    axios.get('http://localhost:5000/accounts/verifyAuth', {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"authToken\") // \"Access-Control-Allow-Origin\": \"*\"\n\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        setCurrentServerId(localStorage.getItem(\"mostRecentServer\"));\n        setUserInfo(res.data);\n        setLoggedIn(true);\n      }\n    }).catch(err => {\n      localStorage.clear();\n    });\n  }; //Log out user\n\n\n  const logout = () => {\n    localStorage.clear();\n    setLoggedIn(false);\n  }; //This one exists to force a rerender of LeftSidebar once a new server has been created.\n  //Doesn't seem like the right way to do it but I can't think of anything better.\n\n\n  const [newServer, setNewServer] = useState(false);\n  const [newUser, setNewUser] = useState(false);\n\n  const refreshLeftSidebar = () => {\n    setNewServer(!newServer);\n  };\n\n  const refreshRightSidebar = () => {\n    setNewUser(!newUser);\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper w-100 h-100 mw-100 mh-100\",\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this);\n  } else if (loggedIn) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 vh-100 container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col vh-100 border border-secondary full-height\",\n          children: /*#__PURE__*/_jsxDEV(LeftSidebar, {\n            newServer: newServer,\n            userId: userInfo._id\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-auto col-8 vh-100 border border-secondary full-height\",\n          children: /*#__PURE__*/_jsxDEV(Routes, {\n            children: [/*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              element: /*#__PURE__*/_jsxDEV(SplashPage, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 54\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/s/:serverId\",\n              element: /*#__PURE__*/_jsxDEV(Main, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 65\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/createServer\",\n              element: /*#__PURE__*/_jsxDEV(ServerCreation, {\n                refreshLeftSidebar: refreshLeftSidebar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 67\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/post/:serverId\",\n              element: /*#__PURE__*/_jsxDEV(PostCreation, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 104,\n                columnNumber: 68\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/v/:serverId/:postId\",\n              element: /*#__PURE__*/_jsxDEV(ViewPost, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 73\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/profile/:userId\",\n              element: /*#__PURE__*/_jsxDEV(ViewProfile, {\n                refreshRightSidebar: refreshRightSidebar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 69\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/serverInfo/:serverId\",\n              element: /*#__PURE__*/_jsxDEV(ViewServer, {\n                refreshLeftSidebar: refreshLeftSidebar\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 74\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col vh-100 border border-secondary\",\n          children: /*#__PURE__*/_jsxDEV(RightSidebar, {\n            newUser: newUser,\n            currentServerId: currentServerId,\n            userInfo: userInfo,\n            logoutCallback: logout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper w-100 h-100\",\n      children: /*#__PURE__*/_jsxDEV(Login, {\n        verifyAuth: verifyAuth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(App, \"kUAmb37s3ZtSU8FUukt/NpSsEnE=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/KarlP/new-app/client/src/components/main/App.js"],"names":["React","useState","useEffect","axios","Route","Routes","LeftSidebar","Main","RightSidebar","Loading","Login","ServerCreation","PostCreation","ViewPost","ViewProfile","ViewServer","SplashPage","App","props","loading","setLoading","loggedIn","setLoggedIn","currentServerId","setCurrentServerId","userInfo","setUserInfo","localStorage","getItem","verifyAuth","get","headers","then","res","status","data","catch","err","clear","logout","newServer","setNewServer","newUser","setNewUser","refreshLeftSidebar","refreshRightSidebar","_id"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {Route, Routes} from 'react-router-dom';\r\n\r\nimport LeftSidebar from './LeftSidebar';\r\nimport Main from './Main';\r\nimport RightSidebar from './RightSidebar';\r\nimport Loading from '../secondary/Loading';\r\nimport Login from './Login';\r\nimport ServerCreation from './ServerCreation';\r\nimport PostCreation from './PostCreation';\r\nimport ViewPost from './ViewPost';\r\nimport ViewProfile from './ViewProfile';\r\nimport ViewServer from './ViewServer';\r\nimport SplashPage from './SplashPage';\r\n\r\n\r\nfunction App(props) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const [currentServerId, setCurrentServerId] = useState(null);\r\n\r\n    // {\r\n    //     username\r\n    //     _id\r\n    //     avatarPostId\r\n    // });\r\n    const [userInfo, setUserInfo] = useState();\r\n\r\n\r\n    //0 - main\r\n    //1 - create server\r\n    //2 - new post\r\n    //3 - view post\r\n\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem(\"authToken\")){\r\n            setLoading(false);\r\n            setLoggedIn(false);\r\n        } else {\r\n            verifyAuth();\r\n        }\r\n    }, [])\r\n\r\n\r\n    const verifyAuth = () => {\r\n        axios.get('http://localhost:5000/accounts/verifyAuth', {\r\n            headers: {\r\n                \"x-access-token\": localStorage.getItem(\"authToken\")\r\n                // \"Access-Control-Allow-Origin\": \"*\"\r\n            }\r\n            }).then((res) => {\r\n                if (res.status === 200) {\r\n                    setCurrentServerId(localStorage.getItem(\"mostRecentServer\"));\r\n                    setUserInfo(res.data)\r\n                    setLoggedIn(true);\r\n\r\n                }\r\n            }).catch((err) => {\r\n                localStorage.clear();\r\n            });\r\n    }\r\n\r\n    //Log out user\r\n    const logout = () => {\r\n        localStorage.clear();\r\n        setLoggedIn(false);\r\n    }\r\n\r\n    \r\n    //This one exists to force a rerender of LeftSidebar once a new server has been created.\r\n    //Doesn't seem like the right way to do it but I can't think of anything better.\r\n    const [newServer, setNewServer] = useState(false);\r\n    const [newUser, setNewUser] = useState(false);\r\n\r\n    const refreshLeftSidebar = () => {\r\n        setNewServer(!newServer);\r\n    }\r\n\r\n    const refreshRightSidebar = () => {\r\n        setNewUser(!newUser);\r\n    }\r\n\r\n    if (loading) {\r\n        return(\r\n            <div className=\"wrapper w-100 h-100 mw-100 mh-100\">\r\n                <Loading/>\r\n            </div>\r\n        )\r\n    } else if (loggedIn) {\r\n        return(\r\n            <div className=\"w-100 vh-100 container-fluid\">\r\n                <div className=\"row\">\r\n                    <div  className=\"col vh-100 border border-secondary full-height\">\r\n                        <LeftSidebar newServer={newServer} userId={userInfo._id}/>\r\n                    </div>\r\n                    <div className=\"overflow-auto col-8 vh-100 border border-secondary full-height\">\r\n                    \r\n                        <Routes>\r\n                            <Route path=\"/\" element={<SplashPage/>}/>\r\n                            <Route path=\"/s/:serverId\" element={<Main/>} />\r\n                            <Route path=\"/createServer\" element={ <ServerCreation refreshLeftSidebar={refreshLeftSidebar}/>}/>\r\n                            <Route path=\"/post/:serverId\" element={<PostCreation/>}/>\r\n                            <Route path=\"/v/:serverId/:postId\" element={<ViewPost />}/>\r\n                            <Route path=\"/profile/:userId\" element={<ViewProfile refreshRightSidebar={refreshRightSidebar}/>}/>\r\n                            <Route path=\"/serverInfo/:serverId\" element={<ViewServer refreshLeftSidebar={refreshLeftSidebar}/>}/>\r\n                        </Routes>\r\n\r\n                    </div>\r\n                    <div  className=\"col vh-100 border border-secondary\">\r\n                        <RightSidebar newUser={newUser} currentServerId={currentServerId} userInfo={userInfo} logoutCallback={logout}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n    } else {\r\n        return(\r\n            <div className=\"wrapper w-100 h-100\">\r\n                <Login verifyAuth={verifyAuth}/>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n} \r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}