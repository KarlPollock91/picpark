{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KarlP\\\\new-app\\\\client\\\\src\\\\components\\\\main\\\\Login.js\",\n    _s = $RefreshSig$();\n\n//Written by Karl Pollock, 2022.\n//KarlPollock91@gmail.com\n//www.karlpollock.com\n//Login.js contains the component that handles both login and registration for new users.\nimport React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport { Form } from 'react-bootstrap';\nimport * as Constants from '../../utils/constants';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Login(props) {\n  _s();\n\n  const [registrationMode, setRegistrationMode] = useState(false);\n  const [usernameInput, setUsernameInput] = useState('');\n  const [passwordInput, setPasswordInput] = useState('');\n  const [confirmPasswordInput, setConfirmPasswordInput] = useState('');\n  const [accountNameInput, setAccountNameInput] = useState('');\n  const [errorText, setErrorText] = useState('');\n  const [formRef] = useState( /*#__PURE__*/React.createRef());\n  const navigate = useNavigate(); //Toggles the display between login mode and registration mode.\n\n  const toggleRegistrationMode = () => {\n    if (!registrationMode) {\n      setRegistrationMode(true);\n    } else {\n      setRegistrationMode(false);\n    }\n\n    setErrorText('');\n  }; //Sends the inputted information to the server in order to generate an account.\n\n\n  const handleRegistration = () => {\n    if (passwordInput === confirmPasswordInput) {\n      const fd = new FormData();\n      fd.append(\"username\", usernameInput);\n      fd.append(\"password\", passwordInput);\n      fd.append(\"accountName\", accountNameInput);\n\n      if (formRef.current.files[0] && formRef.current.files[0].name) {\n        fd.append('file-upload', formRef.current.files[0], formRef.current.files[0].name);\n      }\n\n      if (!formRef.current.files[0] || formRef.current.files[0].type.split('/')[0] === \"image\") {\n        axios.post(`${Constants.SERVER_URL}/accounts/register`, fd, {\n          headers: {\n            'Content-Type': 'application/json'\n          }\n        }).then(res => {\n          if (res.status === 200) {\n            toggleRegistrationMode();\n            setErrorText(\"Registration successful.\");\n          }\n        }).catch(err => {\n          if (err.response.status === 400) {\n            setErrorText(\"That account name is already in use.\");\n          } else {\n            setErrorText(\"Something went wrong.\");\n          }\n        });\n      } else {\n        setErrorText(\"Only image files can be set as your avatar.\");\n      }\n\n      ;\n    } else {\n      setErrorText(\"Your password does not match.\");\n    }\n  }; //Sends the information to the server to verify for logging in.\n\n\n  const handleLogin = () => {\n    const data = {\n      accountName: accountNameInput,\n      password: passwordInput\n    };\n    axios.post(`${Constants.SERVER_URL}/accounts/login`, data, {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        localStorage.setItem(\"authToken\", res.data.token);\n        navigate(\"/\");\n        props.verifyAuth();\n      }\n    }).catch(err => {\n      if (err.response.status === 401) {\n        setErrorText(\"Invalid account name or password.\");\n      } else {\n        setErrorText(\"Something went wrong.\");\n      }\n    });\n  };\n\n  if (!registrationMode) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-form-wrapper text-center w-50 container my-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"m-3\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: errorText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3 row\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: accountNameInput,\n          onInput: e => setAccountNameInput(e.target.value),\n          className: \"form-control\",\n          placeholder: \"Account Name\",\n          \"aria-label\": \"Account Name\",\n          \"aria-describedby\": \"basic-addon1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3 row\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: passwordInput,\n          onInput: e => setPasswordInput(e.target.value),\n          className: \"form-control\",\n          placeholder: \"Password\",\n          \"aria-label\": \"Password\",\n          \"aria-describedby\": \"basic-addon1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button row\",\n        onClick: handleLogin,\n        className: \"btn btn-outline-primary\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-select-none row\",\n        onClick: toggleRegistrationMode,\n        children: \"Register new account\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"input-form-wrapper text-center w-50 container my-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"m-3\",\n        children: \"Registration\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: errorText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3 row\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          maxLength: 20,\n          value: usernameInput,\n          onInput: e => setUsernameInput(e.target.value),\n          id: \"reg-username\",\n          className: \"form-control\",\n          placeholder: \"Username\",\n          \"aria-label\": \"Username\",\n          \"aria-describedby\": \"basic-addon1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3 row\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"input-group-text\",\n          id: \"basic-addon1\",\n          children: \"@\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: accountNameInput,\n          onInput: e => setAccountNameInput(e.target.value),\n          className: \"form-control\",\n          placeholder: \"Account Name\",\n          \"aria-label\": \"Account Name\",\n          \"aria-describedby\": \"basic-addon1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3 row\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: passwordInput,\n          onInput: e => setPasswordInput(e.target.value),\n          className: \"form-control\",\n          placeholder: \"Password\",\n          \"aria-label\": \"Password\",\n          \"aria-describedby\": \"basic-addon1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"input-group mb-3 row\",\n        children: /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          value: confirmPasswordInput,\n          onInput: e => setConfirmPasswordInput(e.target.value),\n          className: \"form-control\",\n          placeholder: \"Confirm Password\",\n          \"aria-label\": \"Confirm Password\",\n          \"aria-describedby\": \"basic-addon1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Form, {\n        className: \"row\",\n        action: \"/file\",\n        method: \"post\",\n        encType: \"multipart/form-data\",\n        children: /*#__PURE__*/_jsxDEV(Form.Group, {\n          controlId: \"formFile\",\n          className: \"mb-3\",\n          a: true,\n          children: /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"file\",\n            name: \"file-upload\",\n            ref: formRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 25\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleRegistration,\n        className: \"btn btn-outline-primary row\",\n        children: \"Register\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"user-select-none row\",\n        onClick: toggleRegistrationMode,\n        children: \"Return to login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(Login, \"NmZNl5FgUyYXpVfPewc7JJIctsk=\", false, function () {\n  return [useNavigate];\n});\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/KarlP/new-app/client/src/components/main/Login.js"],"names":["React","useState","useNavigate","axios","Form","Constants","Login","props","registrationMode","setRegistrationMode","usernameInput","setUsernameInput","passwordInput","setPasswordInput","confirmPasswordInput","setConfirmPasswordInput","accountNameInput","setAccountNameInput","errorText","setErrorText","formRef","createRef","navigate","toggleRegistrationMode","handleRegistration","fd","FormData","append","current","files","name","type","split","post","SERVER_URL","headers","then","res","status","catch","err","response","handleLogin","data","accountName","password","localStorage","setItem","token","verifyAuth","e","target","value"],"mappings":"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","sourcesContent":["//Written by Karl Pollock, 2022.\r\n//KarlPollock91@gmail.com\r\n//www.karlpollock.com\r\n\r\n//Login.js contains the component that handles both login and registration for new users.\r\n\r\nimport React, {useState} from 'react';\r\nimport {useNavigate} from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport {Form} from 'react-bootstrap';\r\n\r\nimport * as Constants from '../../utils/constants';\r\n\r\nfunction Login(props) {\r\n    const [registrationMode, setRegistrationMode] = useState(false);\r\n    const [usernameInput, setUsernameInput] = useState('');\r\n    const [passwordInput, setPasswordInput] = useState('');\r\n    const [confirmPasswordInput, setConfirmPasswordInput] = useState('');\r\n    const [accountNameInput, setAccountNameInput] = useState('');\r\n    const [errorText, setErrorText] = useState('');\r\n    const [formRef] = useState(React.createRef());\r\n\r\n    const navigate = useNavigate();\r\n    \r\n    //Toggles the display between login mode and registration mode.\r\n    const toggleRegistrationMode = () => {\r\n        if (!registrationMode) {\r\n        setRegistrationMode(true);\r\n        } else {\r\n            setRegistrationMode(false);\r\n        }\r\n        setErrorText('');\r\n    }\r\n\r\n    //Sends the inputted information to the server in order to generate an account.\r\n    const handleRegistration = () => {\r\n        if (passwordInput === confirmPasswordInput ){\r\n\r\n            const fd = new FormData();\r\n\r\n            fd.append(\"username\", usernameInput);\r\n            fd.append(\"password\", passwordInput);\r\n            fd.append(\"accountName\", accountNameInput);\r\n\r\n            if (formRef.current.files[0] && formRef.current.files[0].name) {\r\n                fd.append('file-upload', formRef.current.files[0], formRef.current.files[0].name);\r\n            }\r\n\r\n            if ((!formRef.current.files[0]) || (formRef.current.files[0].type.split('/')[0] === \"image\")) {\r\n                axios.post(`${Constants.SERVER_URL}/accounts/register`, fd, {\r\n                    headers: {\r\n                        'Content-Type': 'application/json'}\r\n                    })\r\n                .then((res) => {\r\n                    if (res.status === 200) {\r\n                        toggleRegistrationMode();\r\n                        setErrorText(\"Registration successful.\")\r\n                    } \r\n                })\r\n                .catch((err) => {\r\n                    if (err.response.status === 400) {\r\n                        setErrorText(\"That account name is already in use.\")\r\n                    } else {\r\n                        setErrorText(\"Something went wrong.\")\r\n                    }\r\n                });\r\n            } else {\r\n                setErrorText(\"Only image files can be set as your avatar.\")\r\n            };\r\n        } else {\r\n            setErrorText(\"Your password does not match.\")\r\n        }\r\n    }\r\n\r\n    //Sends the information to the server to verify for logging in.\r\n    const handleLogin = () => {\r\n        const data = {\r\n            accountName: accountNameInput,\r\n            password: passwordInput\r\n        };\r\n\r\n        axios.post(`${Constants.SERVER_URL}/accounts/login`, data, {\r\n            headers: {\r\n                'Content-Type': 'application/json'}\r\n            })\r\n        .then((res) => {\r\n            if (res.status === 200) {\r\n                localStorage.setItem(\"authToken\", res.data.token);\r\n                navigate(\"/\");\r\n                props.verifyAuth();\r\n            } \r\n        })\r\n        .catch((err) => {\r\n            if (err.response.status === 401) {\r\n                setErrorText(\"Invalid account name or password.\")\r\n            } else{\r\n                setErrorText(\"Something went wrong.\")\r\n            }\r\n        });\r\n    }\r\n\r\n    if (!registrationMode){\r\n        return (\r\n            <div className=\"input-form-wrapper text-center w-50 container my-5\">\r\n                <h2 className=\"m-3\">Login</h2>\r\n                <div className=\"row\">{errorText}</div>\r\n                <div className=\"input-group mb-3 row\">\r\n                    <input type=\"text\" value={accountNameInput} onInput={e => setAccountNameInput(e.target.value)} className=\"form-control\" placeholder=\"Account Name\" aria-label=\"Account Name\" aria-describedby=\"basic-addon1\"/>\r\n                </div>\r\n                <div className=\"input-group mb-3 row\">\r\n                    <input type=\"password\" value={passwordInput} onInput={e => setPasswordInput(e.target.value)} className=\"form-control\" placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"basic-addon1\"/>\r\n                </div>\r\n                <button type=\"button row\" onClick={handleLogin} className=\"btn btn-outline-primary\">Login</button>\r\n                <div className=\"user-select-none row\" onClick={toggleRegistrationMode}>Register new account</div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div className=\"input-form-wrapper text-center w-50 container my-5\">\r\n                <h2 className=\"m-3\">Registration</h2>\r\n                <div className=\"row\">{errorText}</div>\r\n                <div className=\"input-group mb-3 row\">\r\n                    <input type=\"text\" maxLength={20} value={usernameInput} onInput={e => setUsernameInput(e.target.value)} id=\"reg-username\" className=\"form-control\" placeholder=\"Username\" aria-label=\"Username\" aria-describedby=\"basic-addon1\"/>\r\n                </div>\r\n                <div className=\"input-group mb-3 row\">\r\n                    <span className=\"input-group-text\" id=\"basic-addon1\">@</span>\r\n                    <input type=\"text\" value={accountNameInput} onInput={e => setAccountNameInput(e.target.value)} className=\"form-control\" placeholder=\"Account Name\" aria-label=\"Account Name\" aria-describedby=\"basic-addon1\"/>\r\n                </div>\r\n                <div className=\"input-group mb-3 row\">\r\n                    <input type=\"password\" value={passwordInput} onInput={e => setPasswordInput(e.target.value)} className=\"form-control\" placeholder=\"Password\" aria-label=\"Password\" aria-describedby=\"basic-addon1\"/>\r\n                </div>\r\n                <div className=\"input-group mb-3 row\">\r\n                    <input type=\"password\" value={confirmPasswordInput} onInput={e => setConfirmPasswordInput(e.target.value)} className=\"form-control\" placeholder=\"Confirm Password\" aria-label=\"Confirm Password\" aria-describedby=\"basic-addon1\"/>\r\n                </div>\r\n                <Form className=\"row\" action=\"/file\" method=\"post\" encType=\"multipart/form-data\">\r\n                        <Form.Group controlId=\"formFile\" className=\"mb-3\" a>\r\n                            <Form.Control type=\"file\" name=\"file-upload\" ref={formRef}/>\r\n                        </Form.Group>\r\n                </Form>\r\n                <button type=\"button\" onClick={handleRegistration} className=\"btn btn-outline-primary row\">Register</button>\r\n                <div className=\"user-select-none row\" onClick={toggleRegistrationMode}>Return to login</div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}