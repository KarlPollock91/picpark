{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KarlP\\\\new-app\\\\client\\\\src\\\\components\\\\secondary\\\\CommentSection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport axios from 'axios';\nimport Avatar from '../thumbnails/Avatar';\nimport { Dropdown, DropdownButton } from 'react-bootstrap';\nimport '../css/Thumbnail.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CommentSection(props) {\n  _s();\n\n  const [comments, setComments] = useState([]);\n  const [updateComments, setUpdateComments] = useState(true);\n  const [newComment, setNewComment] = useState('');\n  const navigate = useNavigate();\n  useEffect(() => {\n    axios.get(`http://localhost:5000/posts/getComments/${props.serverId}/${props.postId}`, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"authToken\")\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        setComments(res.data);\n      }\n    });\n  }, [updateComments]);\n\n  const deleteComment = commentId => {\n    axios.delete(`http://localhost:5000/posts/deleteComment/${state.serverId}/${commentId}`, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"authToken\")\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        setUpdateComments(!updateComments);\n      }\n    });\n  };\n\n  const makeComment = e => {\n    const fd = new FormData();\n    fd.append(\"commentText\", newComment);\n    axios.post(`http://localhost:5000/posts/makeComment/${state.serverId}/${state._id}`, fd, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"authToken\"),\n        'Content-Type': 'multipart/form-data'\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        setNewComment('');\n        setUpdateComments(!updateComments);\n      }\n    });\n  }; //Enter pressed in the comment text field.\n\n\n  const submitComment = e => {\n    if (e.keyCode == 13 && e.shiftKey == false) {\n      e.preventDefault();\n      makeComment(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"col border border-secondary content-comment mb-4 \",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      class: \"list-group w-100\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"border-bottom border-secondary pb-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n          type: \"text\",\n          value: newComment,\n          onInput: e => setNewComment(e.target.value),\n          className: \"form-control mt-3\",\n          rows: \"2\",\n          placeholder: \"Comment\",\n          \"aria-label\": \"Comment\",\n          onKeyDown: submitComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          class: \"btn btn-outline-secondary\",\n          onClick: makeComment,\n          children: \"Post Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 21\n      }, this), comments.map((el, i) => /*#__PURE__*/_jsxDEV(CommentThumbnail, {\n        deleteCommentCallback: deleteComment,\n        commentObject: el,\n        userId: props.userId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CommentSection, \"LmX1NricYvrh6ptPFfzb6kXjWy8=\", false, function () {\n  return [useNavigate];\n});\n\n_c = CommentSection;\nexport default CommentSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"sources":["C:/Users/KarlP/new-app/client/src/components/secondary/CommentSection.js"],"names":["React","useEffect","useState","useNavigate","axios","Avatar","Dropdown","DropdownButton","CommentSection","props","comments","setComments","updateComments","setUpdateComments","newComment","setNewComment","navigate","get","serverId","postId","headers","localStorage","getItem","then","res","status","data","deleteComment","commentId","delete","state","makeComment","e","fd","FormData","append","post","_id","submitComment","keyCode","shiftKey","preventDefault","target","value","map","el","i","userId"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport axios from 'axios';\r\nimport Avatar from '../thumbnails/Avatar';\r\nimport {Dropdown, DropdownButton} from 'react-bootstrap';\r\n\r\nimport '../css/Thumbnail.css';\r\n\r\nfunction CommentSection(props) {\r\n\r\n    \r\n    const [comments, setComments] = useState([]);\r\n    const [updateComments, setUpdateComments] = useState(true);\r\n    const [newComment, setNewComment] = useState('');\r\n\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        axios.get(`http://localhost:5000/posts/getComments/${props.serverId}/${props.postId}`, {headers: \r\n                {\r\n                    \"x-access-token\": localStorage.getItem(\"authToken\")\r\n                }\r\n            })\r\n            .then((res) => {\r\n                if (res.status === 200){\r\n                    setComments(res.data);  \r\n                }\r\n            });\r\n    }, [updateComments]);\r\n\r\n    \r\n    const deleteComment = (commentId) => {\r\n        axios.delete(`http://localhost:5000/posts/deleteComment/${state.serverId}/${commentId}`, {headers: \r\n        {\r\n            \"x-access-token\": localStorage.getItem(\"authToken\")\r\n        }})\r\n        .then((res) => {\r\n            if (res.status === 200){\r\n                setUpdateComments(!updateComments);\r\n            }\r\n        });\r\n    }\r\n\r\n    const makeComment = (e) => {\r\n        const fd = new FormData();\r\n        fd.append(\"commentText\", newComment);\r\n\r\n        axios.post(`http://localhost:5000/posts/makeComment/${state.serverId}/${state._id}`, fd,\r\n            {\r\n                headers: \r\n                    {\r\n                        \"x-access-token\": localStorage.getItem(\"authToken\"),\r\n                        'Content-Type': 'multipart/form-data'\r\n                    }\r\n            })\r\n        .then((res) => {\r\n            if (res.status === 200){\r\n                setNewComment('');\r\n                setUpdateComments(!updateComments);\r\n            }\r\n        });\r\n    }\r\n\r\n     //Enter pressed in the comment text field.\r\n     const submitComment = (e) => {\r\n        if(e.keyCode == 13 && e.shiftKey == false) {\r\n          e.preventDefault();\r\n          makeComment(e);\r\n\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div className=\"col border border-secondary content-comment mb-4 \">\r\n            <ul class=\"list-group w-100\">\r\n                    <div className=\"border-bottom border-secondary pb-2\">\r\n                    <textarea type=\"text\" value={newComment} onInput={e => setNewComment(e.target.value)} className=\"form-control mt-3\" rows=\"2\" placeholder=\"Comment\" aria-label=\"Comment\" onKeyDown={submitComment}/>\r\n                    <button type=\"button\" class=\"btn btn-outline-secondary\" onClick={makeComment}>Post Comment</button>\r\n                    </div>\r\n                    {comments.map((el, i) => (\r\n                        <CommentThumbnail   deleteCommentCallback={deleteComment}\r\n                                            commentObject={el}\r\n                                            userId={props.userId}/>\r\n                    ))}\r\n            </ul>\r\n        </div>\r\n\r\n    );\r\n}\r\n\r\nexport default CommentSection;"]},"metadata":{},"sourceType":"module"}