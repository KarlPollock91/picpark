{"ast":null,"code":"import _slicedToArray from\"C:/Users/KarlP/new-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";//Written by Karl Pollock, 2022.\n//KarlPollock91@gmail.com\n//www.karlpollock.com\n//Main.js contains the main view for servers in which users can view posts and create new ones.\nimport React,{useState,useEffect}from'react';import{useNavigate,useParams}from\"react-router-dom\";import axios from'axios';import'../css/Main.css';import*as Constants from'../../utils/constants';import ServerThumbnail from'../thumbnails/ServerThumbnail';import PostThumbnail from'../thumbnails/PostThumbnail';import NewPostThumbnail from'../thumbnails/NewPostThumbnail';import Loading from'../secondary/Loading';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function Main(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),postIds=_useState2[0],setPostIds=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),loadedPosts=_useState4[0],setLoadedPosts=_useState4[1];var params=useParams();var navigate=useNavigate();var _useState5=useState(),_useState6=_slicedToArray(_useState5,2),serverSecurities=_useState6[0],setServerSecurities=_useState6[1];var _useState7=useState(0),_useState8=_slicedToArray(_useState7,2),userPermissions=_useState8[0],setUserPermissions=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),loadedSecurities=_useState10[0],setLoadedSecurities=_useState10[1];//Component hook to retrieve all the posts currently on this server.\nuseEffect(function(){axios.get(\"\".concat(Constants.SERVER_URL,\"/servers/getPosts/\").concat(params.serverId),{headers:{\"x-access-token\":localStorage.getItem(\"authToken\")}}).then(function(res){setLoadedPosts(true);if(res.status===200){setPostIds(res.data);}else if(res.status===404){navigate('/picpark');}}).catch(function(err){setLoadedPosts(true);});},[navigate,params.serverId]);//Component hook that retrieves the security settings of the current server.\nuseEffect(function(){axios.get(\"\".concat(Constants.SERVER_URL,\"/servers/serverSecurities/\").concat(params.serverId),{headers:{\"x-access-token\":localStorage.getItem(\"authToken\")}}).then(function(res){if(res.status===200){setServerSecurities(res.data.serverSecurities);setUserPermissions(res.data.permissions);setLoadedSecurities(true);}});},[params.serverId]);//Adds the current user as a member of the server.\nvar joinServer=function joinServer(){var fd=new FormData();axios.post(\"\".concat(Constants.SERVER_URL,\"/servers/joinServer/\").concat(params.serverId),fd,{headers:{\"x-access-token\":localStorage.getItem(\"authToken\")}}).then(function(res){if(res.status===200){props.refreshLeftSidebar();setUserPermissions(2);}});};return/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"row\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"col-md-6\",children:/*#__PURE__*/_jsx(ServerThumbnail,{serverId:params.serverId})}),/*#__PURE__*/_jsx(\"div\",{className:\"text-center align-middle col-md-6\",children:loadedSecurities?userPermissions===1&&serverSecurities.allowJoin===0?/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:joinServer,className:\"px-5 my-2 btn-lg btn-outline-primary\",children:\"Join Server\"}):/*#__PURE__*/_jsxs(\"div\",{className:\"my-3\",children:[\" Status: \",Constants.USER_STATUS[userPermissions],\" \"]}):\"\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"row gy-4 mx-auto pt-3\",children:[loadedSecurities&&userPermissions>=2?/*#__PURE__*/_jsx(NewPostThumbnail,{serverId:params.serverId}):\"\",postIds?postIds.map(function(el,i){return/*#__PURE__*/_jsx(PostThumbnail,{postObject:el},el._id);}):loadedPosts?\"You do not have permission to view these posts\":/*#__PURE__*/_jsx(Loading,{})]})]});}export default Main;","map":{"version":3,"sources":["C:/Users/KarlP/new-app/client/src/components/main/Main.js"],"names":["React","useState","useEffect","useNavigate","useParams","axios","Constants","ServerThumbnail","PostThumbnail","NewPostThumbnail","Loading","Main","props","postIds","setPostIds","loadedPosts","setLoadedPosts","params","navigate","serverSecurities","setServerSecurities","userPermissions","setUserPermissions","loadedSecurities","setLoadedSecurities","get","SERVER_URL","serverId","headers","localStorage","getItem","then","res","status","data","catch","err","permissions","joinServer","fd","FormData","post","refreshLeftSidebar","allowJoin","USER_STATUS","map","el","i","_id"],"mappings":"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","sourcesContent":["//Written by Karl Pollock, 2022.\r\n//KarlPollock91@gmail.com\r\n//www.karlpollock.com\r\n\r\n//Main.js contains the main view for servers in which users can view posts and create new ones.\r\n\r\nimport React, {useState, useEffect} from 'react';\r\nimport {useNavigate, useParams } from \"react-router-dom\";\r\nimport axios from 'axios'\r\n\r\nimport '../css/Main.css'\r\nimport * as Constants from '../../utils/constants';\r\n\r\nimport ServerThumbnail from '../thumbnails/ServerThumbnail';\r\nimport PostThumbnail from '../thumbnails/PostThumbnail'\r\nimport NewPostThumbnail from '../thumbnails/NewPostThumbnail';\r\nimport Loading from '../secondary/Loading';\r\n\r\nfunction Main(props) {\r\n    const [postIds, setPostIds] = useState();\r\n    const [loadedPosts, setLoadedPosts] = useState(false);\r\n\r\n    const params = useParams();\r\n    const navigate = useNavigate();\r\n\r\n    const [serverSecurities, setServerSecurities] = useState();\r\n    const [userPermissions, setUserPermissions] = useState(0);\r\n    const [loadedSecurities, setLoadedSecurities] = useState(false);\r\n\r\n    //Component hook to retrieve all the posts currently on this server.\r\n    useEffect(() => {\r\n            axios.get(`${Constants.SERVER_URL}/servers/getPosts/${params.serverId}`, {headers: \r\n                {\r\n                    \"x-access-token\": localStorage.getItem(\"authToken\")\r\n                }\r\n            })\r\n            .then((res) => {\r\n                setLoadedPosts(true);\r\n                if (res.status === 200) {\r\n                    setPostIds(res.data);\r\n                } else if (res.status === 404) {\r\n                    navigate('/picpark')\r\n                }\r\n            }).catch((err) => {\r\n                setLoadedPosts(true);\r\n            });\r\n    }, [navigate, params.serverId]);\r\n\r\n    //Component hook that retrieves the security settings of the current server.\r\n    useEffect(() => {\r\n            axios.get(`${Constants.SERVER_URL}/servers/serverSecurities/${params.serverId}`, {headers: \r\n                {\r\n                    \"x-access-token\": localStorage.getItem(\"authToken\")\r\n                }\r\n            })\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    setServerSecurities(res.data.serverSecurities);\r\n                    setUserPermissions(res.data.permissions);\r\n                    setLoadedSecurities(true);\r\n                }\r\n            })\r\n    }, [params.serverId]);\r\n\r\n    //Adds the current user as a member of the server.\r\n    const joinServer = () => {\r\n        const fd = new FormData();\r\n        axios.post(`${Constants.SERVER_URL}/servers/joinServer/${params.serverId}`, fd, {headers: \r\n            {\r\n                \"x-access-token\": localStorage.getItem(\"authToken\")\r\n            }\r\n        })\r\n        .then((res) => {\r\n            if (res.status === 200) {\r\n                props.refreshLeftSidebar();\r\n                setUserPermissions(2);\r\n            }\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <ServerThumbnail serverId={params.serverId}/>\r\n                </div>\r\n                <div className=\"text-center align-middle col-md-6\">\r\n                    {loadedSecurities ?\r\n                        ((userPermissions === 1) && (serverSecurities.allowJoin === 0)) ?\r\n                            <button type=\"button\" onClick={joinServer} className=\"px-5 my-2 btn-lg btn-outline-primary\">Join Server</button>\r\n                        : <div className=\"my-3\"> Status: {Constants.USER_STATUS[userPermissions]} </div>\r\n                    : \"\"}\r\n                </div>\r\n            </div>\r\n             \r\n            <div className=\"row gy-4 mx-auto pt-3\">\r\n                {loadedSecurities && userPermissions >= 2 ?\r\n                    <NewPostThumbnail serverId={params.serverId}/>\r\n                : \"\"}\r\n                {postIds ?\r\n                        postIds.map((el, i) => (\r\n                            <PostThumbnail postObject={el} key={el._id}/>\r\n                        ))\r\n                : (loadedPosts ? \"You do not have permission to view these posts\" : <Loading/>)}\r\n            </div> \r\n            \r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}