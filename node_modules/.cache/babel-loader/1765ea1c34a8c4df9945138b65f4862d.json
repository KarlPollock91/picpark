{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KarlP\\\\new-app\\\\client\\\\src\\\\components\\\\main\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport LeftSidebar from './LeftSidebar';\nimport Main from './Main';\nimport RightSidebar from './RightSidebar';\nimport Loading from './Loading';\nimport Login from './Login';\nimport ServerCreation from './ServerCreation';\nimport PostCreation from './PostCreation';\nimport ViewPost from './ViewPost';\nimport ViewProfile from './ViewProfile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [loggedIn, setLoggedIn] = useState(false);\n  const [currentServerId, setCurrentServerId] = useState(null);\n  const [viewPostObject, setViewPostObject] = useState();\n  const [viewProfileObject, setViewProfileObject] = useState(); // {\n  //     username\n  //     _id\n  //     avatarPostId\n  // });\n\n  const [userInfo, setUserInfo] = useState(); //0 - main\n  //1 - create server\n  //2 - new post\n  //3 - view post\n\n  const [componentDisplay, setComponentDisplay] = useState(0);\n  useEffect(() => {\n    if (!localStorage.getItem(\"authToken\")) {\n      setLoading(false);\n      setLoggedIn(false);\n    } else {\n      verifyAuth();\n    }\n  }, []);\n\n  const verifyAuth = () => {\n    axios.get('http://localhost:5000/accounts/verifyAuth', {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"authToken\") // \"Access-Control-Allow-Origin\": \"*\"\n\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        setCurrentServerId(localStorage.getItem(\"mostRecentServer\"));\n        setUserInfo(res.data);\n        setLoggedIn(true);\n      }\n    }).catch(err => {\n      localStorage.clear();\n    });\n  }; //Log out user\n\n\n  const logout = () => {\n    localStorage.clear();\n    setLoading(true);\n    setLoggedIn(false);\n  }; //This one exists to force a rerender of LeftSidebar once a new server has been created.\n  //Doesn't seem like the right way to do it but I can't think of anything better.\n\n\n  const [newServer, setNewServer] = useState(false);\n\n  const refreshLeftSidebar = () => {\n    setNewServer(!newServer);\n  }; //Changes the server the user is viewing and updates cookies.\n\n\n  const changeServer = serverId => {\n    localStorage.setItem(\"mostRecentServer\", serverId);\n    setComponentDisplay(0);\n    setCurrentServerId(serverId);\n  }; //Switch to post creation mode\n\n\n  const enterPostCreation = () => {\n    setComponentDisplay(2);\n  }; //Switch to view post mode with postId\n\n\n  const viewPost = postObject => {\n    setViewPostObject(postObject);\n    setComponentDisplay(3);\n  };\n\n  const viewProfile = profileObject => {\n    setViewProfileObject(profileObject);\n    setComponentDisplay(4);\n  };\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper w-100 h-100 mw-100 mh-100\",\n      children: /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  } else if (loggedIn) {\n    var component = /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"An error has occured\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }, this);\n\n    if (componentDisplay === 0 && currentServerId != null) {\n      component = /*#__PURE__*/_jsxDEV(Main, {\n        currentServerId: currentServerId,\n        viewPost: viewPost,\n        enterPostCreation: enterPostCreation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 25\n      }, this);\n    } else if (componentDisplay === 1) {\n      component = /*#__PURE__*/_jsxDEV(ServerCreation, {\n        refreshLeftSidebar: refreshLeftSidebar,\n        setComponentDisplay: setComponentDisplay,\n        changeServer: changeServer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 25\n      }, this);\n    } else if (componentDisplay === 2 && currentServerId != null) {\n      component = /*#__PURE__*/_jsxDEV(PostCreation, {\n        setComponentDisplay: setComponentDisplay,\n        currentServerId: currentServerId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 25\n      }, this);\n    } else if (componentDisplay === 3) {\n      component = /*#__PURE__*/_jsxDEV(ViewPost, {\n        setComponentDisplay: setComponentDisplay,\n        postObject: viewPostObject,\n        userInfo: userInfo,\n        viewProfileCallback: viewProfile\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 25\n      }, this);\n    } else if (componentDisplay === 4) {\n      component = /*#__PURE__*/_jsxDEV(ViewProfile, {\n        setComponentDisplay: setComponentDisplay,\n        profileObject: viewProfileObject,\n        userInfo: userInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 25\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-100 vh-100 container-fluid\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col vh-100 border border-secondary full-height\",\n          children: /*#__PURE__*/_jsxDEV(LeftSidebar, {\n            newServer: newServer,\n            setComponentDisplay: setComponentDisplay,\n            changeServerCallback: changeServer\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"overflow-auto col-8 vh-100 border border-secondary full-height\",\n          children: component\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col vh-100 border border-secondary\",\n          children: /*#__PURE__*/_jsxDEV(RightSidebar, {\n            currentServerId: currentServerId,\n            userInfo: userInfo,\n            viewProfileCallback: viewProfile,\n            logoutCallback: logout\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"wrapper w-100 h-100\",\n      children: /*#__PURE__*/_jsxDEV(Login, {\n        verifyAuth: verifyAuth\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(App, \"PF20+e9PNQD7x4KvTVHxWbdyHAk=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/KarlP/new-app/client/src/components/main/App.js"],"names":["React","useState","useEffect","axios","LeftSidebar","Main","RightSidebar","Loading","Login","ServerCreation","PostCreation","ViewPost","ViewProfile","App","props","loading","setLoading","loggedIn","setLoggedIn","currentServerId","setCurrentServerId","viewPostObject","setViewPostObject","viewProfileObject","setViewProfileObject","userInfo","setUserInfo","componentDisplay","setComponentDisplay","localStorage","getItem","verifyAuth","get","headers","then","res","status","data","catch","err","clear","logout","newServer","setNewServer","refreshLeftSidebar","changeServer","serverId","setItem","enterPostCreation","viewPost","postObject","viewProfile","profileObject","component"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\n\r\n\r\nimport LeftSidebar from './LeftSidebar';\r\nimport Main from './Main';\r\nimport RightSidebar from './RightSidebar';\r\nimport Loading from './Loading';\r\nimport Login from './Login';\r\nimport ServerCreation from './ServerCreation';\r\nimport PostCreation from './PostCreation';\r\nimport ViewPost from './ViewPost'\r\nimport ViewProfile from './ViewProfile'\r\n\r\n\r\nfunction App(props) {\r\n    const [loading, setLoading] = useState(false);\r\n    const [loggedIn, setLoggedIn] = useState(false);\r\n    const [currentServerId, setCurrentServerId] = useState(null);\r\n    const [viewPostObject, setViewPostObject] = useState();\r\n    const [viewProfileObject, setViewProfileObject] = useState();\r\n\r\n    // {\r\n    //     username\r\n    //     _id\r\n    //     avatarPostId\r\n    // });\r\n    const [userInfo, setUserInfo] = useState();\r\n\r\n\r\n    //0 - main\r\n    //1 - create server\r\n    //2 - new post\r\n    //3 - view post\r\n    const [componentDisplay, setComponentDisplay] = useState(0);\r\n\r\n\r\n    useEffect(() => {\r\n        if (!localStorage.getItem(\"authToken\")){\r\n            setLoading(false);\r\n            setLoggedIn(false);\r\n        } else {\r\n            verifyAuth();\r\n        }\r\n    }, [])\r\n\r\n\r\n    const verifyAuth = () => {\r\n        axios.get('http://localhost:5000/accounts/verifyAuth', {\r\n            headers: {\r\n                \"x-access-token\": localStorage.getItem(\"authToken\")\r\n                // \"Access-Control-Allow-Origin\": \"*\"\r\n            }\r\n            }).then((res) => {\r\n                if (res.status === 200) {\r\n\r\n                    setCurrentServerId(localStorage.getItem(\"mostRecentServer\"));\r\n                    setUserInfo(res.data)\r\n                    setLoggedIn(true);\r\n\r\n                }\r\n            }).catch((err) => {\r\n                localStorage.clear();\r\n            });\r\n    }\r\n\r\n    //Log out user\r\n    const logout = () => {\r\n        localStorage.clear();\r\n        setLoading(true);\r\n        setLoggedIn(false);\r\n    }\r\n\r\n    \r\n    //This one exists to force a rerender of LeftSidebar once a new server has been created.\r\n    //Doesn't seem like the right way to do it but I can't think of anything better.\r\n    const [newServer, setNewServer] = useState(false);\r\n\r\n    const refreshLeftSidebar = () => {\r\n        setNewServer(!newServer);\r\n    }\r\n\r\n    //Changes the server the user is viewing and updates cookies.\r\n    const changeServer = (serverId) => {\r\n        localStorage.setItem(\"mostRecentServer\", serverId);\r\n        setComponentDisplay(0);\r\n        setCurrentServerId(serverId);\r\n    }\r\n\r\n    //Switch to post creation mode\r\n    const enterPostCreation = () => {\r\n        setComponentDisplay(2);\r\n    }\r\n\r\n    //Switch to view post mode with postId\r\n    const viewPost = (postObject) => {\r\n        setViewPostObject(postObject);\r\n        setComponentDisplay(3);\r\n    }\r\n\r\n    const viewProfile = (profileObject) => {\r\n        setViewProfileObject(profileObject);\r\n        setComponentDisplay(4);\r\n    }\r\n\r\n\r\n    if (loading) {\r\n        return(\r\n            <div className=\"wrapper w-100 h-100 mw-100 mh-100\">\r\n                <Loading/>\r\n            </div>\r\n        )\r\n    } else if (loggedIn) {\r\n        var component = <div>An error has occured</div>;\r\n\r\n        if (componentDisplay === 0 && (currentServerId != null)) {\r\n            component = <Main currentServerId={currentServerId} viewPost={viewPost} enterPostCreation={enterPostCreation}/>\r\n        } else if (componentDisplay === 1) {\r\n            component = <ServerCreation refreshLeftSidebar={refreshLeftSidebar} setComponentDisplay={setComponentDisplay} changeServer={changeServer}/>\r\n        } else if (componentDisplay === 2 && (currentServerId != null)) {\r\n            component = <PostCreation setComponentDisplay={setComponentDisplay} currentServerId={currentServerId}/>\r\n        } else if (componentDisplay === 3) {\r\n            component = <ViewPost setComponentDisplay={setComponentDisplay} postObject={viewPostObject} userInfo={userInfo} viewProfileCallback={viewProfile}/>\r\n        } else if (componentDisplay === 4) {\r\n            component = <ViewProfile setComponentDisplay={setComponentDisplay} profileObject={viewProfileObject} userInfo={userInfo}/>\r\n        }\r\n\r\n        return(\r\n            <div className=\"w-100 vh-100 container-fluid\">\r\n                <div className=\"row\">\r\n                    <div  className=\"col vh-100 border border-secondary full-height\">\r\n                        <LeftSidebar newServer={newServer} setComponentDisplay={setComponentDisplay} changeServerCallback={changeServer}/>\r\n                    </div>\r\n                    <div className=\"overflow-auto col-8 vh-100 border border-secondary full-height\">\r\n                        {component}\r\n                    </div>\r\n                    <div  className=\"col vh-100 border border-secondary\">\r\n                        <RightSidebar currentServerId={currentServerId} userInfo={userInfo} viewProfileCallback={viewProfile} logoutCallback={logout}/>\r\n                    </div>\r\n                </div>\r\n                {/* <button type=\"button\" class=\"btn btn-outline-primary\" onClick={logout}>Log Out</button> */}\r\n            </div>\r\n        )\r\n\r\n    } else {\r\n        return(\r\n            <div className=\"wrapper w-100 h-100\">\r\n                <Login verifyAuth={verifyAuth}/>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n} \r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}