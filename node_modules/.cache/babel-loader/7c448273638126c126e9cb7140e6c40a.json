{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KarlP\\\\new-app\\\\client\\\\src\\\\components\\\\main\\\\ViewPost.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { Form } from 'react-bootstrap';\nimport CommentThumbnail from '../thumbnails/CommentThumbnail';\nimport '../css/ViewPost.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ViewPost(props) {\n  _s();\n\n  const [content, setContent] = useState();\n  const [text, setText] = useState();\n  const [comments, setComments] = useState([]);\n  const [updateComments, setUpdateComments] = useState(true);\n  const [newComment, setNewComment] = useState('');\n  useEffect(() => {\n    if (props.postObject) {\n      axios.get(`http://localhost:5000/posts/getComments/${props.postObject.serverId}/${props.postObject._id}`, {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"authToken\")\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          setComments(res.data);\n        }\n      });\n    }\n  }, [updateComments]);\n\n  const exitViewPost = () => {\n    props.setComponentDisplay(0);\n  };\n\n  const makeComment = e => {\n    console.log(\"MAKE COMMENT\");\n    const fd = new FormData();\n    fd.append(\"commentText\", newcomment);\n    axios.post(`http://localhost:5000/posts/makeComment/${props.postObject.serverId}/${props.postObject._id}`, fd, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"authToken\")\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        setNewComment('');\n        setUpdateComments(!updateComments);\n      }\n    });\n  };\n\n  const submitComment = e => {\n    if (e.keyCode == 13 && e.shiftKey == false) {\n      e.preventDefault();\n      makeComment(e);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container text-center position-relative w-100 h-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"i\", {\n      className: \"bi bi-x-circle position-absolute top-0 end-0 fa-lg\",\n      onClick: exitViewPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row start-50 translate-middle-x top-0 position-absolute w-75 mt-4\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col\",\n        children: [props.postObject.dataType != \"text\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row border border-secondary content-viewer\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: props.postObject.dataType === \"image\" ? /*#__PURE__*/_jsxDEV(\"img\", {\n              className: \"img-fluid my-3 mx-auto d-block\",\n              src: `http://localhost:5000/files/image/${props.postObject.dataId}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 74\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 25\n        }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"row border border-secondary content-text mb-4\",\n          children: props.postObject.postText\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col border border-secondary content-comment mb-4\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          class: \"list-group w-100\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"border-bottom border-secondary pb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n              type: \"text\",\n              value: newComment,\n              onInput: e => setNewComment(e.target.value),\n              className: \"form-control mt-3\",\n              rows: \"2\",\n              placeholder: \"Comment\",\n              \"aria-label\": \"Comment\",\n              onKeyDown: submitComment\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              class: \"btn btn-outline-secondary\",\n              onClick: makeComment,\n              children: \"Post Comment\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 25\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 25\n          }, this), comments.map((el, i) => /*#__PURE__*/_jsxDEV(CommentThumbnail, {\n            username: el.username,\n            imageDataId: el.imageDataId,\n            commentText: el.commentText\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ViewPost, \"y+kytM+kYPlHGl1b2bLuN6tUZEY=\");\n\n_c = ViewPost;\nexport default ViewPost;\n\nvar _c;\n\n$RefreshReg$(_c, \"ViewPost\");","map":{"version":3,"sources":["C:/Users/KarlP/new-app/client/src/components/main/ViewPost.js"],"names":["React","useState","useEffect","axios","Form","CommentThumbnail","ViewPost","props","content","setContent","text","setText","comments","setComments","updateComments","setUpdateComments","newComment","setNewComment","postObject","get","serverId","_id","headers","localStorage","getItem","then","res","status","data","exitViewPost","setComponentDisplay","makeComment","e","console","log","fd","FormData","append","newcomment","post","submitComment","keyCode","shiftKey","preventDefault","dataType","dataId","postText","target","value","map","el","i","username","imageDataId","commentText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,iBAAnB;AAEA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAO,qBAAP;;;AAEA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AAAA;;AAErB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBR,QAAQ,EAAtC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,EAAhC;AAEA,QAAM,CAACW,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACa,cAAD,EAAiBC,iBAAjB,IAAsCd,QAAQ,CAAC,IAAD,CAApD;AACA,QAAM,CAACe,UAAD,EAAaC,aAAb,IAA8BhB,QAAQ,CAAC,EAAD,CAA5C;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,KAAK,CAACW,UAAV,EAAsB;AAClBf,MAAAA,KAAK,CAACgB,GAAN,CAAW,2CAA0CZ,KAAK,CAACW,UAAN,CAAiBE,QAAS,IAAGb,KAAK,CAACW,UAAN,CAAiBG,GAAI,EAAvG,EAA0G;AAACC,QAAAA,OAAO,EAC9G;AACA,4BAAkBC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADlB;AADsG,OAA1G,EAKCC,IALD,CAKOC,GAAD,IAAS;AACX,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAuB;AACnBd,UAAAA,WAAW,CAACa,GAAG,CAACE,IAAL,CAAX;AACH;AACJ,OATD;AAUH;AACJ,GAbQ,EAaN,CAACd,cAAD,CAbM,CAAT;;AAeA,QAAMe,YAAY,GAAG,MAAM;AACvBtB,IAAAA,KAAK,CAACuB,mBAAN,CAA0B,CAA1B;AACH,GAFD;;AAIA,QAAMC,WAAW,GAAIC,CAAD,IAAO;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAY,cAAZ;AACA,UAAMC,EAAE,GAAG,IAAIC,QAAJ,EAAX;AAEAD,IAAAA,EAAE,CAACE,MAAH,CAAU,aAAV,EAAyBC,UAAzB;AAEAnC,IAAAA,KAAK,CAACoC,IAAN,CAAY,2CAA0ChC,KAAK,CAACW,UAAN,CAAiBE,QAAS,IAAGb,KAAK,CAACW,UAAN,CAAiBG,GAAI,EAAxG,EAA2Gc,EAA3G,EACI;AACIb,MAAAA,OAAO,EACH;AACA,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADlB;AAFR,KADJ,EAOKC,IAPL,CAOWC,GAAD,IAAS;AACX,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAuB;AACnBV,QAAAA,aAAa,CAAC,EAAD,CAAb;AACAF,QAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACH;AACR,KAZD;AAaH,GAnBD;;AAqBA,QAAM0B,aAAa,GAAIR,CAAD,IAAO;AACzB,QAAGA,CAAC,CAACS,OAAF,IAAa,EAAb,IAAmBT,CAAC,CAACU,QAAF,IAAc,KAApC,EAA2C;AACzCV,MAAAA,CAAC,CAACW,cAAF;AACAZ,MAAAA,WAAW,CAACC,CAAD,CAAX;AAED;AACF,GANH;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAC,qDAAf;AAAA,4BACI;AAAG,MAAA,SAAS,EAAC,oDAAb;AAAkE,MAAA,OAAO,EAAEH;AAA3E;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,mEAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,mBACKtB,KAAK,CAACW,UAAN,CAAiB0B,QAAjB,IAA6B,MAA7B,gBACG;AAAK,UAAA,SAAS,EAAC,4CAAf;AAAA,iCACI;AAAA,sBACKrC,KAAK,CAACW,UAAN,CAAiB0B,QAAjB,KAA8B,OAA9B,gBAAwC;AAAK,cAAA,SAAS,EAAC,gCAAf;AAAgD,cAAA,GAAG,EAAG,qCAAoCrC,KAAK,CAACW,UAAN,CAAiB2B,MAAO;AAAlH;AAAA;AAAA;AAAA;AAAA,oBAAxC,GAAiK;AADtK;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,gBADH,GAMC,IAPN,eAQI;AAAK,UAAA,SAAS,EAAC,+CAAf;AAAA,oBACKtC,KAAK,CAACW,UAAN,CAAiB4B;AADtB;AAAA;AAAA;AAAA;AAAA,gBARJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAaI;AAAK,QAAA,SAAS,EAAC,kDAAf;AAAA,+BACI;AAAI,UAAA,KAAK,EAAC,kBAAV;AAAA,kCACI;AAAK,YAAA,SAAS,EAAC,qCAAf;AAAA,oCACA;AAAU,cAAA,IAAI,EAAC,MAAf;AAAsB,cAAA,KAAK,EAAE9B,UAA7B;AAAyC,cAAA,OAAO,EAAEgB,CAAC,IAAIf,aAAa,CAACe,CAAC,CAACe,MAAF,CAASC,KAAV,CAApE;AAAsF,cAAA,SAAS,EAAC,mBAAhG;AAAoH,cAAA,IAAI,EAAC,GAAzH;AAA6H,cAAA,WAAW,EAAC,SAAzI;AAAmJ,4BAAW,SAA9J;AAAwK,cAAA,SAAS,EAAER;AAAnL;AAAA;AAAA;AAAA;AAAA,oBADA,eAEA;AAAQ,cAAA,IAAI,EAAC,QAAb;AAAsB,cAAA,KAAK,EAAC,2BAA5B;AAAwD,cAAA,OAAO,EAAET,WAAjE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAKKnB,QAAQ,CAACqC,GAAT,CAAa,CAACC,EAAD,EAAKC,CAAL,kBACV,QAAC,gBAAD;AAAkB,YAAA,QAAQ,EAAED,EAAE,CAACE,QAA/B;AAAyC,YAAA,WAAW,EAAEF,EAAE,CAACG,WAAzD;AAAsE,YAAA,WAAW,EAAEH,EAAE,CAACI;AAAtF;AAAA;AAAA;AAAA;AAAA,kBADH,CALL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAgCH;;GAzFQhD,Q;;KAAAA,Q;AA2FT,eAAeA,QAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport {Form} from 'react-bootstrap';\r\n\r\nimport CommentThumbnail from '../thumbnails/CommentThumbnail';\r\nimport '../css/ViewPost.css'\r\n\r\nfunction ViewPost(props) {\r\n\r\n    const [content, setContent] = useState();\r\n    const [text, setText] = useState();\r\n\r\n    const [comments, setComments] = useState([]);\r\n    const [updateComments, setUpdateComments] = useState(true);\r\n    const [newComment, setNewComment] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (props.postObject) {\r\n            axios.get(`http://localhost:5000/posts/getComments/${props.postObject.serverId}/${props.postObject._id}`, {headers: \r\n                {\r\n                \"x-access-token\": localStorage.getItem(\"authToken\")\r\n                }\r\n            })\r\n            .then((res) => {\r\n                if (res.status === 200){\r\n                    setComments(res.data);\r\n                }\r\n            });\r\n        }\r\n    }, [updateComments]);\r\n\r\n    const exitViewPost = () => {\r\n        props.setComponentDisplay(0);\r\n    }\r\n\r\n    const makeComment = (e) => {\r\n        console.log(\"MAKE COMMENT\");\r\n        const fd = new FormData();\r\n\r\n        fd.append(\"commentText\", newcomment);\r\n\r\n        axios.post(`http://localhost:5000/posts/makeComment/${props.postObject.serverId}/${props.postObject._id}`, fd,\r\n            {\r\n                headers: \r\n                    {\r\n                    \"x-access-token\": localStorage.getItem(\"authToken\")\r\n                    }\r\n            })\r\n            .then((res) => {\r\n                if (res.status === 200){\r\n                    setNewComment('');\r\n                    setUpdateComments(!updateComments);\r\n                }\r\n        });\r\n    }\r\n\r\n    const submitComment = (e) => {\r\n        if(e.keyCode == 13 && e.shiftKey == false) {\r\n          e.preventDefault();\r\n          makeComment(e);\r\n\r\n        }\r\n      }\r\n\r\n    return (\r\n        <div className=\"container text-center position-relative w-100 h-100\">\r\n            <i className=\"bi bi-x-circle position-absolute top-0 end-0 fa-lg\" onClick={exitViewPost}></i>\r\n            <div className=\"row start-50 translate-middle-x top-0 position-absolute w-75 mt-4\">\r\n                <div className=\"col\">\r\n                    {props.postObject.dataType != \"text\" ?\r\n                        <div className=\"row border border-secondary content-viewer\">\r\n                            <div>\r\n                                {props.postObject.dataType === \"image\" ? <img className=\"img-fluid my-3 mx-auto d-block\" src={`http://localhost:5000/files/image/${props.postObject.dataId}`}/> : null}\r\n                            </div>\r\n                        </div>\r\n                    : null} \r\n                    <div className=\"row border border-secondary content-text mb-4\">\r\n                        {props.postObject.postText}\r\n                    </div>\r\n                </div>\r\n                <div className=\"col border border-secondary content-comment mb-4\">\r\n                    <ul class=\"list-group w-100\">\r\n                        <div className=\"border-bottom border-secondary pb-2\">\r\n                        <textarea type=\"text\" value={newComment} onInput={e => setNewComment(e.target.value)} className=\"form-control mt-3\" rows=\"2\" placeholder=\"Comment\" aria-label=\"Comment\" onKeyDown={submitComment}/>\r\n                        <button type=\"button\" class=\"btn btn-outline-secondary\" onClick={makeComment}>Post Comment</button>\r\n                        </div>\r\n                        {comments.map((el, i) => (\r\n                            <CommentThumbnail username={el.username} imageDataId={el.imageDataId} commentText={el.commentText}/>\r\n                        ))}\r\n                        \r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            \r\n        </div>\r\n  );\r\n}\r\n\r\nexport default ViewPost;"]},"metadata":{},"sourceType":"module"}