{"ast":null,"code":"import _slicedToArray from\"C:/Users/KarlP/new-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";//Written by Karl Pollock, 2022.\n//KarlPollock91@gmail.com\n//www.karlpollock.com\n//PostCreation.js is where users will write a post, and upload an image along side it.\nimport React,{useState}from'react';import axios from'axios';import{Form}from'react-bootstrap';import{useNavigate,useParams}from'react-router-dom';import*as Constants from'../../utils/constants';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function PostCreation(props){var _useState=useState(''),_useState2=_slicedToArray(_useState,2),errorText=_useState2[0],setErrorText=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),textInput=_useState4[0],setTextInput=_useState4[1];var _useState5=useState(/*#__PURE__*/React.createRef()),_useState6=_slicedToArray(_useState5,1),formRef=_useState6[0];var navigate=useNavigate();var params=useParams();//Sends the forms to the server to generate a post.\nvar handleCreation=function handleCreation(){var fd=new FormData();fd.append(\"postText\",textInput);if(!formRef.current.files[0]||formRef.current.files[0].type.split('/')[0]===\"image\"){fd.append('file-upload',formRef.current.files[0],formRef.current.files[0].name);axios.post(\"\".concat(Constants.SERVER_URL,\"/posts/upload/\").concat(params.serverId),fd,{headers:{'x-access-token':localStorage.getItem(\"authToken\"),'Content-Type':'multipart/form-data'}}).then(function(res){if(res.status===200){exitPostCreation();}}).catch(function(err){setErrorText(\"Something went wrong.\");});}else{setErrorText(\"Only image files can be uploaded.\");};};//Returns the user to the server they were posting to.\nvar exitPostCreation=function exitPostCreation(){navigate(\"/picpark/s/\".concat(params.serverId));};return/*#__PURE__*/_jsxs(\"div\",{className:\"text-center container position-relative w-100 h-100\",children:[/*#__PURE__*/_jsx(\"i\",{className:\"bi bi-x-circle position-absolute top-0 end-0 fa-lg\",onClick:exitPostCreation}),/*#__PURE__*/_jsxs(\"div\",{className:\"mx-auto w-75 mt-5\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"New Post\"}),/*#__PURE__*/_jsx(\"div\",{children:errorText}),\"Post Text\",/*#__PURE__*/_jsx(\"div\",{className:\"input-group w-100\",children:/*#__PURE__*/_jsx(\"textarea\",{type:\"text\",value:textInput,onInput:function onInput(e){return setTextInput(e.target.value);},className:\"form-control\",\"aria-label\":\"Add text\"})}),\"Image File\",/*#__PURE__*/_jsx(Form,{className:\"w-100\",action:\"/file\",method:\"post\",encType:\"multipart/form-data\",children:/*#__PURE__*/_jsx(Form.Group,{controlId:\"formFile\",className:\"mb-3\",a:true,children:/*#__PURE__*/_jsx(Form.Control,{type:\"file\",name:\"file-upload\",ref:formRef})})}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",onClick:handleCreation,className:\"btn btn-outline-primary\",children:\"Submit\"})]})]});}export default PostCreation;","map":{"version":3,"sources":["C:/Users/KarlP/new-app/client/src/components/main/PostCreation.js"],"names":["React","useState","axios","Form","useNavigate","useParams","Constants","PostCreation","props","errorText","setErrorText","textInput","setTextInput","createRef","formRef","navigate","params","handleCreation","fd","FormData","append","current","files","type","split","name","post","SERVER_URL","serverId","headers","localStorage","getItem","then","res","status","exitPostCreation","catch","err","e","target","value"],"mappings":"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","sourcesContent":["//Written by Karl Pollock, 2022.\r\n//KarlPollock91@gmail.com\r\n//www.karlpollock.com\r\n\r\n//PostCreation.js is where users will write a post, and upload an image along side it.\r\n\r\nimport React, {useState} from 'react';\r\nimport axios from 'axios';\r\nimport {Form} from 'react-bootstrap';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\n\r\nimport * as Constants from '../../utils/constants';\r\n\r\nfunction PostCreation(props) {\r\n    const [errorText, setErrorText] = useState('');\r\n    const [textInput, setTextInput] = useState('');\r\n    const [formRef] = useState(React.createRef());\r\n    \r\n    const navigate = useNavigate();\r\n    const params = useParams();\r\n\r\n    //Sends the forms to the server to generate a post.\r\n    const handleCreation = () => {\r\n        const fd = new FormData();\r\n\r\n        fd.append(\"postText\", textInput);\r\n        \r\n        if ((!formRef.current.files[0]) || (formRef.current.files[0].type.split('/')[0] === \"image\")) {\r\n            fd.append('file-upload', formRef.current.files[0], formRef.current.files[0].name);\r\n            \r\n            axios.post(`${Constants.SERVER_URL}/posts/upload/${params.serverId}`, fd, {\r\n                headers: {\r\n                    'x-access-token': localStorage.getItem(\"authToken\"),\r\n                    'Content-Type': 'multipart/form-data'\r\n                }\r\n                })\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    exitPostCreation();\r\n                } \r\n            })\r\n            .catch((err) => {\r\n                setErrorText(\"Something went wrong.\")\r\n            });\r\n        } else {\r\n            setErrorText(\"Only image files can be uploaded.\")\r\n        };\r\n\r\n    \r\n    }\r\n\r\n    //Returns the user to the server they were posting to.\r\n    const exitPostCreation = () => {\r\n        navigate(`/picpark/s/${params.serverId}`);\r\n    }\r\n\r\n    return (\r\n        <div className=\"text-center container position-relative w-100 h-100\">\r\n            <i className=\"bi bi-x-circle position-absolute top-0 end-0 fa-lg\" onClick={exitPostCreation}></i>\r\n            <div className=\"mx-auto w-75 mt-5\">\r\n                <h3>New Post</h3>\r\n                <div>{errorText}</div> \r\n                Post Text\r\n                <div className=\"input-group w-100\">\r\n                    <textarea type=\"text\" value={textInput} onInput={e => setTextInput(e.target.value)} className=\"form-control\" aria-label=\"Add text\"></textarea>\r\n                </div>\r\n                Image File\r\n                <Form className=\"w-100\" action=\"/file\" method=\"post\" encType=\"multipart/form-data\">\r\n                    <Form.Group controlId=\"formFile\" className=\"mb-3\" a>\r\n                        <Form.Control type=\"file\" name=\"file-upload\" ref={formRef}/>\r\n                    </Form.Group>\r\n                </Form>\r\n                <button type=\"button\" onClick={handleCreation} className=\"btn btn-outline-primary\">Submit</button>\r\n            </div>\r\n        </div>\r\n  );\r\n}\r\n\r\nexport default PostCreation;"]},"metadata":{},"sourceType":"module"}