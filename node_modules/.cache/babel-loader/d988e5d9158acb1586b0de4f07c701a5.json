{"ast":null,"code":"import _slicedToArray from\"C:/Users/KarlP/new-app/client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";//Written by Karl Pollock, 2022.\n//KarlPollock91@gmail.com\n//www.karlpollock.com\n//Avatar.js is a component used in thumbnails to display an image from the server in an avatar format.\nimport React,{useEffect,useState}from'react';import'../css/Thumbnail.css';import axios from'axios';import*as Constants from'../../utils/constants';import{jsx as _jsx}from\"react/jsx-runtime\";function Avatar(props){var _useState=useState(),_useState2=_slicedToArray(_useState,2),avatarDataId=_useState2[0],setAvatarDataId=_useState2[1];//Component hook to retrieve the image from the server.\nuseEffect(function(){if(props.avatarPostId!=null){axios.get(\"\".concat(Constants.SERVER_URL,\"/files/getImageFromPost/\").concat(props.avatarPostId),{headers:{\"x-access-token\":localStorage.getItem(\"authToken\")}}).then(function(res){if(res.status===200){setAvatarDataId(res.data.dataId);}}).catch(function(err){});}},[props.avatarPostId]);return/*#__PURE__*/_jsx(\"img\",{alt:\"User avatar\",style:{borderRadius:'50%',objectFit:'cover',height:props.large?'150px':'50px',width:props.large?'150px':'50px'},className:\"thumbnail-image\",src:props.localPreview?props.localPreview:avatarDataId?\"\".concat(Constants.SERVER_URL,\"/files/image/\").concat(avatarDataId):\"\".concat(process.env.PUBLIC_URL,\"/images/server_default.png\")});}export default Avatar;","map":{"version":3,"sources":["C:/Users/KarlP/new-app/client/src/components/thumbnails/Avatar.js"],"names":["React","useEffect","useState","axios","Constants","Avatar","props","avatarDataId","setAvatarDataId","avatarPostId","get","SERVER_URL","headers","localStorage","getItem","then","res","status","data","dataId","catch","err","borderRadius","objectFit","height","large","width","localPreview","process","env","PUBLIC_URL"],"mappings":"gHAAA;AACA;AACA;AAEA;AAEA,MAAOA,CAAAA,KAAP,EAAeC,SAAf,CAA0BC,QAA1B,KAAyC,OAAzC,CACA,MAAO,sBAAP,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CAEA,MAAO,GAAKC,CAAAA,SAAZ,KAA2B,uBAA3B,C,2CAEA,QAASC,CAAAA,MAAT,CAAgBC,KAAhB,CAAuB,CAEnB,cAAwCJ,QAAQ,EAAhD,wCAAOK,YAAP,eAAqBC,eAArB,eAEA;AACAP,SAAS,CAAC,UAAM,CACZ,GAAIK,KAAK,CAACG,YAAN,EAAsB,IAA1B,CAAgC,CAC5BN,KAAK,CAACO,GAAN,WAAaN,SAAS,CAACO,UAAvB,oCAA4DL,KAAK,CAACG,YAAlE,EAAkF,CAACG,OAAO,CACtF,CACA,iBAAkBC,YAAY,CAACC,OAAb,CAAqB,WAArB,CADlB,CAD8E,CAAlF,EAKCC,IALD,CAKM,SAACC,GAAD,CAAS,CACX,GAAIA,GAAG,CAACC,MAAJ,GAAe,GAAnB,CAAwB,CACpBT,eAAe,CAACQ,GAAG,CAACE,IAAJ,CAASC,MAAV,CAAf,CACH,CACJ,CATD,EASGC,KATH,CASS,SAACC,GAAD,CAAS,CACjB,CAVD,EAWH,CACJ,CAdQ,CAcN,CAACf,KAAK,CAACG,YAAP,CAdM,CAAT,CAgBA,mBACI,YAAK,GAAG,CAAC,aAAT,CAAuB,KAAK,CAAE,CAACa,YAAY,CAAC,KAAd,CAAqBC,SAAS,CAAC,OAA/B,CAAwCC,MAAM,CAAElB,KAAK,CAACmB,KAAN,CAAc,OAAd,CAAwB,MAAxE,CAAgFC,KAAK,CAAEpB,KAAK,CAACmB,KAAN,CAAc,OAAd,CAAwB,MAA/G,CAA9B,CACI,SAAS,CAAC,iBADd,CAEI,GAAG,CAAEnB,KAAK,CAACqB,YAAN,CAAqBrB,KAAK,CAACqB,YAA3B,CACApB,YAAY,WAAMH,SAAS,CAACO,UAAhB,yBAA0CJ,YAA1C,YAA8DqB,OAAO,CAACC,GAAR,CAAYC,UAA1E,8BAHrB,EADJ,CAMH,CAED,cAAezB,CAAAA,MAAf","sourcesContent":["//Written by Karl Pollock, 2022.\r\n//KarlPollock91@gmail.com\r\n//www.karlpollock.com\r\n\r\n//Avatar.js is a component used in thumbnails to display an image from the server in an avatar format.\r\n\r\nimport React, {useEffect, useState} from 'react';\r\nimport '../css/Thumbnail.css';\r\nimport axios from 'axios'\r\n\r\nimport * as Constants from '../../utils/constants';\r\n\r\nfunction Avatar(props) {\r\n\r\n    const [avatarDataId, setAvatarDataId] = useState();\r\n\r\n    //Component hook to retrieve the image from the server.\r\n    useEffect(() => {\r\n        if (props.avatarPostId != null) {\r\n            axios.get(`${Constants.SERVER_URL}/files/getImageFromPost/${props.avatarPostId}`, {headers: \r\n                {\r\n                \"x-access-token\": localStorage.getItem(\"authToken\")\r\n                }\r\n            })\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    setAvatarDataId(res.data.dataId);\r\n                }\r\n            }).catch((err) => {\r\n            });\r\n        }\r\n    }, [props.avatarPostId]);\r\n\r\n    return(\r\n        <img alt=\"User avatar\" style={{borderRadius:'50%', objectFit:'cover', height: props.large ? '150px' : '50px', width: props.large ? '150px' : '50px'}} \r\n            className=\"thumbnail-image\" \r\n            src={props.localPreview ? props.localPreview :\r\n                (avatarDataId ? `${Constants.SERVER_URL}/files/image/${avatarDataId}` : `${process.env.PUBLIC_URL}/images/server_default.png`)}/>\r\n    );\r\n}\r\n\r\nexport default Avatar;"]},"metadata":{},"sourceType":"module"}