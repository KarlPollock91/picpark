{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KarlP\\\\new-app\\\\client\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport UploadBar from './UploadBar';\nimport ImageThumbnail from './ImageThumbnail';\nimport './css/Main.css';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  console.log(\"MAIN FUNCTION\");\n  const [imageIds, setImageIds] = useState([]);\n  useEffect(() => {\n    if (props.currentServerId != null) {\n      fetchData();\n    }\n  }, []); //Callback to display new files when they are uploaded by the user.\n  //TODO why is imagethumbnails cleared out when addednewfile is called?\n\n  const addedNewFile = id => {\n    setImageIds([...imageIds, id]);\n  }; //Retrieve files from the server\n\n\n  const fetchData = () => {\n    axios.get(`http://localhost:5000/servers/getImages/${props.currentServerId}`, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"authToken\")\n      }\n    }).then(res => {\n      let newIds = [];\n      res.data.map((el, i) => {\n        newIds.push(el.dataId);\n      });\n      setImageIds([...imageIds, ...newIds]);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row gy-4 main-grid mx-auto pt-3\",\n      children: imageIds.map((el, i) => {\n        /*#__PURE__*/\n        _jsxDEV(ImageThumbnail, {\n          id: el\n        }, el, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(UploadBar, {\n      newFileCallback: addedNewFile,\n      currentServerId: props.currentServerId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"89u7+wrsp4HtSmcsCqmra+jqTgc=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/KarlP/new-app/client/src/components/Main.js"],"names":["React","useState","useEffect","UploadBar","ImageThumbnail","axios","Main","props","console","log","imageIds","setImageIds","currentServerId","fetchData","addedNewFile","id","get","headers","localStorage","getItem","then","res","newIds","data","map","el","i","push","dataId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BV,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIK,KAAK,CAACK,eAAN,IAAyB,IAA7B,EAAmC;AAC/BC,MAAAA,SAAS;AACZ;AACJ,GAJQ,EAIN,EAJM,CAAT,CAJiB,CAWhB;AACA;;AACA,QAAMC,YAAY,GAAIC,EAAD,IAAQ;AAC1BJ,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcK,EAAd,CAAD,CAAX;AACH,GAFA,CAbgB,CAiBjB;;;AACA,QAAMF,SAAS,GAAG,MAAM;AACpBR,IAAAA,KAAK,CAACW,GAAN,CAAW,2CAA0CT,KAAK,CAACK,eAAgB,EAA3E,EAA8E;AAACK,MAAAA,OAAO,EAClF;AACI,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADtB;AAD0E,KAA9E,EAKCC,IALD,CAKOC,GAAD,IAAS;AACX,UAAIC,MAAM,GAAG,EAAb;AACAD,MAAAA,GAAG,CAACE,IAAJ,CAASC,GAAT,CAAa,CAACC,EAAD,EAAKC,CAAL,KAAW;AACpBJ,QAAAA,MAAM,CAACK,IAAP,CAAYF,EAAE,CAACG,MAAf;AACH,OAFD;AAIAjB,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAc,GAAGY,MAAjB,CAAD,CAAX;AAEH,KAbD;AAcH,GAfD;;AAmBA,sBACI;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA,gBACKZ,QAAQ,CAACc,GAAT,CAAa,CAACC,EAAD,EAAKC,CAAL,KAAW;AACrB;AAAA,gBAAC,cAAD;AAAgB,UAAA,EAAE,EAAED;AAApB,WAA6BA,EAA7B;AAAA;AAAA;AAAA;AAAA;AACH,OAFA;AADL;AAAA;AAAA;AAAA;AAAA,YADJ,eAMI,QAAC,SAAD;AAAW,MAAA,eAAe,EAAEX,YAA5B;AAA0C,MAAA,eAAe,EAAEP,KAAK,CAACK;AAAjE;AAAA;AAAA;AAAA;AAAA,YANJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH;;GA/CQN,I;;KAAAA,I;AAiDT,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport UploadBar from './UploadBar'\r\nimport ImageThumbnail from './ImageThumbnail'\r\nimport './css/Main.css'\r\nimport axios from 'axios'\r\n\r\nfunction Main(props) {\r\n    console.log(\"MAIN FUNCTION\");\r\n    const [imageIds, setImageIds] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (props.currentServerId != null) {\r\n            fetchData();\r\n        } \r\n    }, []);\r\n\r\n    \r\n     //Callback to display new files when they are uploaded by the user.\r\n     //TODO why is imagethumbnails cleared out when addednewfile is called?\r\n     const addedNewFile = (id) => {\r\n        setImageIds([...imageIds, id]);\r\n    }\r\n\r\n    //Retrieve files from the server\r\n    const fetchData = () => {\r\n        axios.get(`http://localhost:5000/servers/getImages/${props.currentServerId}`, {headers: \r\n            {\r\n                \"x-access-token\": localStorage.getItem(\"authToken\")\r\n            }\r\n        })\r\n        .then((res) => {\r\n            let newIds = [];\r\n            res.data.map((el, i) => {\r\n                newIds.push(el.dataId);\r\n            });\r\n           \r\n            setImageIds([...imageIds, ...newIds]);\r\n\r\n        });\r\n    }\r\n\r\n   \r\n\r\n    return(\r\n        <div>\r\n            <div className=\"row gy-4 main-grid mx-auto pt-3\">\r\n                {imageIds.map((el, i) => {\r\n                    <ImageThumbnail id={el} key={el}/>\r\n                })}\r\n            </div> \r\n            <UploadBar newFileCallback={addedNewFile} currentServerId={props.currentServerId}/>\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}