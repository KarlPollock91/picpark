{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KarlP\\\\new-app\\\\client\\\\src\\\\components\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport UploadBar from './UploadBar';\nimport ImageThumbnail from './ImageThumbnail';\nimport './css/Main.css';\nimport axios from 'axios';\nimport NewPostThumbnail from './NewPostThumbnail';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  const [imageIds, setImageIds] = useState([]);\n  useEffect(() => {\n    if (props.currentServerId != null) {\n      console.log(props.currentServerId);\n      axios.get(`http://localhost:5000/servers/getImages/${props.currentServerId}`, {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"authToken\")\n        }\n      }).then(res => {\n        let newIds = [];\n        res.data.map((el, i) => {\n          newIds.push(el.dataId);\n        });\n        setImageIds(newIds);\n      });\n    }\n  }, [props.currentServerId]); //Callback to display new files when they are uploaded by the user.\n  //TODO why is imagethumbnails cleared out when addednewfile is called?\n\n  const addedNewFile = id => {\n    setImageIds([...imageIds, id]);\n  };\n\n  const enterPostCreation = () => {\n    console.log(\"Clicked\");\n    props.setComponentDisplay(2);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row gy-4 main-grid mx-auto pt-3\",\n      children: [/*#__PURE__*/_jsxDEV(NewPostThumbnail, {\n        enterPostCreation: enterPostCreation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), imageIds.map((el, i) => /*#__PURE__*/_jsxDEV(ImageThumbnail, {\n        id: el\n      }, el, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"89u7+wrsp4HtSmcsCqmra+jqTgc=\");\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/KarlP/new-app/client/src/components/Main.js"],"names":["React","useState","useEffect","UploadBar","ImageThumbnail","axios","NewPostThumbnail","Main","props","imageIds","setImageIds","currentServerId","console","log","get","headers","localStorage","getItem","then","res","newIds","data","map","el","i","push","dataId","addedNewFile","id","enterPostCreation","setComponentDisplay"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAO,gBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIM,KAAK,CAACG,eAAN,IAAyB,IAA7B,EAAmC;AAC/BC,MAAAA,OAAO,CAACC,GAAR,CAAYL,KAAK,CAACG,eAAlB;AACAN,MAAAA,KAAK,CAACS,GAAN,CAAW,2CAA0CN,KAAK,CAACG,eAAgB,EAA3E,EAA8E;AAACI,QAAAA,OAAO,EAClF;AACI,4BAAkBC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADtB;AAD0E,OAA9E,EAKCC,IALD,CAKOC,GAAD,IAAS;AACX,YAAIC,MAAM,GAAG,EAAb;AACAD,QAAAA,GAAG,CAACE,IAAJ,CAASC,GAAT,CAAa,CAACC,EAAD,EAAKC,CAAL,KAAW;AACpBJ,UAAAA,MAAM,CAACK,IAAP,CAAYF,EAAE,CAACG,MAAf;AACH,SAFD;AAIAhB,QAAAA,WAAW,CAACU,MAAD,CAAX;AAEH,OAbD;AAcH;AACJ,GAlBQ,EAkBN,CAACZ,KAAK,CAACG,eAAP,CAlBM,CAAT,CAHiB,CAwBhB;AACA;;AACA,QAAMgB,YAAY,GAAIC,EAAD,IAAQ;AAC1BlB,IAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcmB,EAAd,CAAD,CAAX;AACH,GAFA;;AAID,QAAMC,iBAAiB,GAAG,MAAM;AAC5BjB,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAL,IAAAA,KAAK,CAACsB,mBAAN,CAA0B,CAA1B;AACH,GAHD;;AAKA,sBACI;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,iCAAf;AAAA,8BACI,QAAC,gBAAD;AAAkB,QAAA,iBAAiB,EAAED;AAArC;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKpB,QAAQ,CAACa,GAAT,CAAa,CAACC,EAAD,EAAKC,CAAL,kBACV,QAAC,cAAD;AAAgB,QAAA,EAAE,EAAED;AAApB,SAA6BA,EAA7B;AAAA;AAAA;AAAA;AAAA,cADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH;;GA9CQhB,I;;KAAAA,I;AAgDT,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport UploadBar from './UploadBar'\r\nimport ImageThumbnail from './ImageThumbnail'\r\nimport './css/Main.css'\r\nimport axios from 'axios'\r\nimport NewPostThumbnail from './NewPostThumbnail';\r\n\r\nfunction Main(props) {\r\n    const [imageIds, setImageIds] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (props.currentServerId != null) {\r\n            console.log(props.currentServerId);\r\n            axios.get(`http://localhost:5000/servers/getImages/${props.currentServerId}`, {headers: \r\n                {\r\n                    \"x-access-token\": localStorage.getItem(\"authToken\")\r\n                }\r\n            })\r\n            .then((res) => {\r\n                let newIds = [];\r\n                res.data.map((el, i) => {\r\n                    newIds.push(el.dataId);\r\n                });\r\n            \r\n                setImageIds(newIds);\r\n\r\n            });\r\n        } \r\n    }, [props.currentServerId]);\r\n\r\n    \r\n     //Callback to display new files when they are uploaded by the user.\r\n     //TODO why is imagethumbnails cleared out when addednewfile is called?\r\n     const addedNewFile = (id) => {\r\n        setImageIds([...imageIds, id]);\r\n    }\r\n\r\n    const enterPostCreation = () => {\r\n        console.log(\"Clicked\");\r\n        props.setComponentDisplay(2);\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <div className=\"row gy-4 main-grid mx-auto pt-3\">\r\n                <NewPostThumbnail enterPostCreation={enterPostCreation}/>\r\n                {imageIds.map((el, i) => (\r\n                    <ImageThumbnail id={el} key={el}/>\r\n                ))}\r\n            </div> \r\n            {/* <UploadBar newFileCallback={addedNewFile} currentServerId={props.currentServerId}/> */}\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}