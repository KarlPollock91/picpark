{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KarlP\\\\new-app\\\\client\\\\src\\\\components\\\\main\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport '../css/Main.css';\nimport ServerThumbnail from '../thumbnails/ServerThumbnail';\nimport PostThumbnail from '../thumbnails/PostThumbnail';\nimport NewPostThumbnail from '../thumbnails/NewPostThumbnail';\nimport Loading from '../secondary/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  const [postIds, setPostIds] = useState();\n  const params = useParams();\n  const [loadedPosts, setLoadedPosts] = useState(false); //Useeffect to get posts\n\n  useEffect(() => {\n    if (params.serverId != null) {\n      axios.get(`http://localhost:5000/servers/getPosts/${params.serverId}`, {\n        headers: {\n          \"x-access-token\": localStorage.getItem(\"authToken\")\n        }\n      }).then(res => {\n        if (res.status === 200) {\n          setPostIds(res.data);\n        }\n\n        setLoadedPosts(true);\n      });\n    }\n  }, [params.serverId]); //useeffect to get user permission\n\n  useEffect(() => {});\n\n  const joinServer = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(ServerThumbnail, {\n          serverId: params.serverId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center align-middle col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: joinServer,\n          className: \"px-5 my-2 btn-lg btn-outline-primary\",\n          children: \"Join Server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), postIds ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row gy-4 mx-auto pt-3\",\n      children: [/*#__PURE__*/_jsxDEV(NewPostThumbnail, {\n        serverId: params.serverId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), postIds.map((el, i) => /*#__PURE__*/_jsxDEV(PostThumbnail, {\n        postObject: el\n      }, el._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 25\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this) : loadedPosts ? \"You do not have permission to view these posts\" : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 81\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"Z7/2l1NJG1PMKWBas3vxnfmfB4E=\", false, function () {\n  return [useParams];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/KarlP/new-app/client/src/components/main/Main.js"],"names":["React","useState","useEffect","useParams","axios","ServerThumbnail","PostThumbnail","NewPostThumbnail","Loading","Main","props","postIds","setPostIds","params","loadedPosts","setLoadedPosts","serverId","get","headers","localStorage","getItem","then","res","status","data","joinServer","map","el","i","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,iBAAP;AAEA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBX,QAAQ,EAAtC;AACA,QAAMY,MAAM,GAAGV,SAAS,EAAxB;AAEA,QAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,KAAD,CAA9C,CAJiB,CAMjB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACZ,QAAIW,MAAM,CAACG,QAAP,IAAmB,IAAvB,EAA6B;AACzBZ,MAAAA,KAAK,CAACa,GAAN,CAAW,0CAAyCJ,MAAM,CAACG,QAAS,EAApE,EAAuE;AAACE,QAAAA,OAAO,EAC3E;AACI,4BAAkBC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADtB;AADmE,OAAvE,EAKCC,IALD,CAKOC,GAAD,IAAS;AACX,YAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpBX,UAAAA,UAAU,CAACU,GAAG,CAACE,IAAL,CAAV;AACH;;AACDT,QAAAA,cAAc,CAAC,IAAD,CAAd;AACH,OAVD;AAWH;AACJ,GAdQ,EAcN,CAACF,MAAM,CAACG,QAAR,CAdM,CAAT,CAPiB,CAuBjB;;AACAd,EAAAA,SAAS,CAAC,MAAM,CAEf,CAFQ,CAAT;;AAIA,QAAMuB,UAAU,GAAG,MAAM,CAExB,CAFD;;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI,QAAC,eAAD;AAAiB,UAAA,QAAQ,EAAEZ,MAAM,CAACG;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA,+BACI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAES,UAA/B;AAA2C,UAAA,SAAS,EAAC,sCAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EASKd,OAAO,gBACJ;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,8BACI,QAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAEE,MAAM,CAACG;AAAnC;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKL,OAAO,CAACe,GAAR,CAAY,CAACC,EAAD,EAAKC,CAAL,kBACT,QAAC,aAAD;AAAe,QAAA,UAAU,EAAED;AAA3B,SAAoCA,EAAE,CAACE,GAAvC;AAAA;AAAA;AAAA;AAAA,cADH,CAFL;AAAA;AAAA;AAAA;AAAA;AAAA,YADI,GAOLf,WAAW,GAAG,gDAAH,gBAAsD,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAhBxE;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAoBH;;GApDQL,I;UAEUN,S;;;KAFVM,I;AAsDT,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from 'axios'\r\n\r\nimport '../css/Main.css'\r\n\r\nimport ServerThumbnail from '../thumbnails/ServerThumbnail';\r\nimport PostThumbnail from '../thumbnails/PostThumbnail'\r\nimport NewPostThumbnail from '../thumbnails/NewPostThumbnail';\r\nimport Loading from '../secondary/Loading';\r\n\r\nfunction Main(props) {\r\n    const [postIds, setPostIds] = useState();\r\n    const params = useParams();\r\n\r\n    const [loadedPosts, setLoadedPosts] = useState(false);\r\n\r\n    //Useeffect to get posts\r\n    useEffect(() => {\r\n        if (params.serverId != null) {\r\n            axios.get(`http://localhost:5000/servers/getPosts/${params.serverId}`, {headers: \r\n                {\r\n                    \"x-access-token\": localStorage.getItem(\"authToken\")\r\n                }\r\n            })\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    setPostIds(res.data);\r\n                }\r\n                setLoadedPosts(true);\r\n            });\r\n        } \r\n    }, [params.serverId]);\r\n\r\n    //useeffect to get user permission\r\n    useEffect(() => {\r\n        \r\n    })\r\n\r\n    const joinServer = () => {\r\n\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <ServerThumbnail serverId={params.serverId}/>\r\n                </div>\r\n                <div className=\"text-center align-middle col-md-6\">\r\n                    <button type=\"button\" onClick={joinServer} className=\"px-5 my-2 btn-lg btn-outline-primary\">Join Server</button>\r\n                </div>\r\n            </div>\r\n            {postIds ?\r\n                <div className=\"row gy-4 mx-auto pt-3\">\r\n                    <NewPostThumbnail serverId={params.serverId}/>\r\n                    {postIds.map((el, i) => (\r\n                        <PostThumbnail postObject={el} key={el._id}/>\r\n                    ))}\r\n                </div> \r\n            : (loadedPosts ? \"You do not have permission to view these posts\" : <Loading/>)}\r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}