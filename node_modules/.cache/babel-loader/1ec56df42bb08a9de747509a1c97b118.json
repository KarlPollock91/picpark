{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\KarlP\\\\new-app\\\\client\\\\src\\\\components\\\\main\\\\Main.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams } from \"react-router-dom\";\nimport axios from 'axios';\nimport '../css/Main.css';\nimport * as Constants from '../../utils/constants';\nimport ServerThumbnail from '../thumbnails/ServerThumbnail';\nimport PostThumbnail from '../thumbnails/PostThumbnail';\nimport NewPostThumbnail from '../thumbnails/NewPostThumbnail';\nimport Loading from '../secondary/Loading';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction Main(props) {\n  _s();\n\n  const [postIds, setPostIds] = useState();\n  const [loadedPosts, setLoadedPosts] = useState(false);\n  const params = useParams();\n  const [serverSecurities, setServerSecurities] = useState();\n  const [userPermissions, setUserPermissions] = useState(0);\n  const [loadedSecurities, setLoadedSecurities] = useState(false); //Useeffect to get posts\n\n  useEffect(() => {\n    axios.get(`${Constants.SERVER_URL}/servers/getPosts/${params.serverId}`, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"authToken\")\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        setPostIds(res.data);\n      }\n\n      setLoadedPosts(true);\n    });\n  }, [params.serverId]); //useeffect to get user permission\n\n  useEffect(() => {\n    axios.get(`${Constants.SERVER_URL}/servers/serverSecurities/${params.serverId}`, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"authToken\")\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        setServerSecurities(res.data.serverSecurities);\n        setUserPermissions(res.data.permissions);\n        setLoadedSecurities(true);\n      }\n    });\n  }, [params.serverId]); //useEffect to get \n\n  const joinServer = () => {\n    axios.post(`${Constants.SERVER_URL}/servers/joinServer/${params.serverId}`, {\n      headers: {\n        \"x-access-token\": localStorage.getItem(\"authToken\")\n      }\n    }).then(res => {\n      if (res.status === 200) {\n        setUserPermissions(2);\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-6\",\n        children: /*#__PURE__*/_jsxDEV(ServerThumbnail, {\n          serverId: params.serverId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center align-middle col-md-6\",\n        children: loadedSecurities ? userPermissions === 1 && serverSecurities.allowJoin === 0 ? /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: joinServer,\n          className: \"px-5 my-2 btn-lg btn-outline-primary\",\n          children: \"Join Server\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"my-auto\",\n          children: [\" Status: \", Constants.USER_STATUS[userPermissions], \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 27\n        }, this) : \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row gy-4 mx-auto pt-3\",\n      children: [loadedSecurities && userPermissions >= 2 ? /*#__PURE__*/_jsxDEV(NewPostThumbnail, {\n        serverId: params.serverId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 21\n      }, this) : \"\", postIds ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: postIds.map((el, i) => /*#__PURE__*/_jsxDEV(PostThumbnail, {\n          postObject: el\n        }, el._id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 29\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 21\n      }, this) : loadedPosts ? \"You do not have permission to view these posts\" : /*#__PURE__*/_jsxDEV(Loading, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 85\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Main, \"kBWnqQLGhKH2jD332Kq9dx5ESVM=\", false, function () {\n  return [useParams];\n});\n\n_c = Main;\nexport default Main;\n\nvar _c;\n\n$RefreshReg$(_c, \"Main\");","map":{"version":3,"sources":["C:/Users/KarlP/new-app/client/src/components/main/Main.js"],"names":["React","useState","useEffect","useParams","axios","Constants","ServerThumbnail","PostThumbnail","NewPostThumbnail","Loading","Main","props","postIds","setPostIds","loadedPosts","setLoadedPosts","params","serverSecurities","setServerSecurities","userPermissions","setUserPermissions","loadedSecurities","setLoadedSecurities","get","SERVER_URL","serverId","headers","localStorage","getItem","then","res","status","data","permissions","joinServer","post","allowJoin","USER_STATUS","map","el","i","_id"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,SAAzB,QAAyC,OAAzC;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAO,iBAAP;AACA,OAAO,KAAKC,SAAZ,MAA2B,uBAA3B;AAEA,OAAOC,eAAP,MAA4B,+BAA5B;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,gBAAP,MAA6B,gCAA7B;AACA,OAAOC,OAAP,MAAoB,sBAApB;;;AAEA,SAASC,IAAT,CAAcC,KAAd,EAAqB;AAAA;;AACjB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,EAAtC;AACA,QAAM,CAACa,WAAD,EAAcC,cAAd,IAAgCd,QAAQ,CAAC,KAAD,CAA9C;AAEA,QAAMe,MAAM,GAAGb,SAAS,EAAxB;AAEA,QAAM,CAACc,gBAAD,EAAmBC,mBAAnB,IAA0CjB,QAAQ,EAAxD;AACA,QAAM,CAACkB,eAAD,EAAkBC,kBAAlB,IAAwCnB,QAAQ,CAAC,CAAD,CAAtD;AACA,QAAM,CAACoB,gBAAD,EAAmBC,mBAAnB,IAA0CrB,QAAQ,CAAC,KAAD,CAAxD,CARiB,CAUjB;;AACAC,EAAAA,SAAS,CAAC,MAAM;AACRE,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAElB,SAAS,CAACmB,UAAW,qBAAoBR,MAAM,CAACS,QAAS,EAAtE,EAAyE;AAACC,MAAAA,OAAO,EAC7E;AACI,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADtB;AADqE,KAAzE,EAKCC,IALD,CAKOC,GAAD,IAAS;AACX,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpBlB,QAAAA,UAAU,CAACiB,GAAG,CAACE,IAAL,CAAV;AACH;;AACDjB,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH,KAVD;AAWP,GAZQ,EAYN,CAACC,MAAM,CAACS,QAAR,CAZM,CAAT,CAXiB,CAyBjB;;AACAvB,EAAAA,SAAS,CAAC,MAAM;AACRE,IAAAA,KAAK,CAACmB,GAAN,CAAW,GAAElB,SAAS,CAACmB,UAAW,6BAA4BR,MAAM,CAACS,QAAS,EAA9E,EAAiF;AAACC,MAAAA,OAAO,EACrF;AACI,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADtB;AAD6E,KAAjF,EAKCC,IALD,CAKOC,GAAD,IAAS;AACX,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpBb,QAAAA,mBAAmB,CAACY,GAAG,CAACE,IAAJ,CAASf,gBAAV,CAAnB;AACAG,QAAAA,kBAAkB,CAACU,GAAG,CAACE,IAAJ,CAASC,WAAV,CAAlB;AACAX,QAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACH;AACJ,KAXD;AAYP,GAbQ,EAaN,CAACN,MAAM,CAACS,QAAR,CAbM,CAAT,CA1BiB,CAyCjB;;AAEA,QAAMS,UAAU,GAAG,MAAM;AACrB9B,IAAAA,KAAK,CAAC+B,IAAN,CAAY,GAAE9B,SAAS,CAACmB,UAAW,uBAAsBR,MAAM,CAACS,QAAS,EAAzE,EAA4E;AAACC,MAAAA,OAAO,EAChF;AACI,0BAAkBC,YAAY,CAACC,OAAb,CAAqB,WAArB;AADtB;AADwE,KAA5E,EAKCC,IALD,CAKOC,GAAD,IAAS;AACX,UAAIA,GAAG,CAACC,MAAJ,KAAe,GAAnB,EAAwB;AACpBX,QAAAA,kBAAkB,CAAC,CAAD,CAAlB;AACH;AACJ,KATD;AAUH,GAXD;;AAaA,sBACI;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,UAAf;AAAA,+BACI,QAAC,eAAD;AAAiB,UAAA,QAAQ,EAAEJ,MAAM,CAACS;AAAlC;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAK,QAAA,SAAS,EAAC,mCAAf;AAAA,kBACKJ,gBAAgB,GACXF,eAAe,KAAK,CAArB,IAA4BF,gBAAgB,CAACmB,SAAjB,KAA+B,CAA5D,gBACI;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAsB,UAAA,OAAO,EAAEF,UAA/B;AAA2C,UAAA,SAAS,EAAC,sCAArD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,gBAEE;AAAK,UAAA,SAAS,EAAC,SAAf;AAAA,kCAAmC7B,SAAS,CAACgC,WAAV,CAAsBlB,eAAtB,CAAnC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHW,GAIf;AALN;AAAA;AAAA;AAAA;AAAA,cAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAcI;AAAK,MAAA,SAAS,EAAC,uBAAf;AAAA,iBACKE,gBAAgB,IAAIF,eAAe,IAAI,CAAvC,gBACG,QAAC,gBAAD;AAAkB,QAAA,QAAQ,EAAEH,MAAM,CAACS;AAAnC;AAAA;AAAA;AAAA;AAAA,cADH,GAEC,EAHN,EAIKb,OAAO,gBACJ;AAAA,kBACKA,OAAO,CAAC0B,GAAR,CAAY,CAACC,EAAD,EAAKC,CAAL,kBACT,QAAC,aAAD;AAAe,UAAA,UAAU,EAAED;AAA3B,WAAoCA,EAAE,CAACE,GAAvC;AAAA;AAAA;AAAA;AAAA,gBADH;AADL;AAAA;AAAA;AAAA;AAAA,cADI,GAML3B,WAAW,GAAG,gDAAH,gBAAsD,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,cAVxE;AAAA;AAAA;AAAA;AAAA;AAAA,YAdJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA8BH;;GAtFQJ,I;UAIUP,S;;;KAJVO,I;AAwFT,eAAeA,IAAf","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport axios from 'axios'\r\n\r\nimport '../css/Main.css'\r\nimport * as Constants from '../../utils/constants';\r\n\r\nimport ServerThumbnail from '../thumbnails/ServerThumbnail';\r\nimport PostThumbnail from '../thumbnails/PostThumbnail'\r\nimport NewPostThumbnail from '../thumbnails/NewPostThumbnail';\r\nimport Loading from '../secondary/Loading';\r\n\r\nfunction Main(props) {\r\n    const [postIds, setPostIds] = useState();\r\n    const [loadedPosts, setLoadedPosts] = useState(false);\r\n\r\n    const params = useParams();\r\n\r\n    const [serverSecurities, setServerSecurities] = useState();\r\n    const [userPermissions, setUserPermissions] = useState(0);\r\n    const [loadedSecurities, setLoadedSecurities] = useState(false);\r\n\r\n    //Useeffect to get posts\r\n    useEffect(() => {\r\n            axios.get(`${Constants.SERVER_URL}/servers/getPosts/${params.serverId}`, {headers: \r\n                {\r\n                    \"x-access-token\": localStorage.getItem(\"authToken\")\r\n                }\r\n            })\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    setPostIds(res.data);\r\n                }\r\n                setLoadedPosts(true);\r\n            });\r\n    }, [params.serverId]);\r\n\r\n    //useeffect to get user permission\r\n    useEffect(() => {\r\n            axios.get(`${Constants.SERVER_URL}/servers/serverSecurities/${params.serverId}`, {headers: \r\n                {\r\n                    \"x-access-token\": localStorage.getItem(\"authToken\")\r\n                }\r\n            })\r\n            .then((res) => {\r\n                if (res.status === 200) {\r\n                    setServerSecurities(res.data.serverSecurities);\r\n                    setUserPermissions(res.data.permissions);\r\n                    setLoadedSecurities(true);\r\n                }\r\n            });\r\n    }, [params.serverId]);\r\n\r\n    //useEffect to get \r\n\r\n    const joinServer = () => {\r\n        axios.post(`${Constants.SERVER_URL}/servers/joinServer/${params.serverId}`, {headers: \r\n            {\r\n                \"x-access-token\": localStorage.getItem(\"authToken\")\r\n            }\r\n        })\r\n        .then((res) => {\r\n            if (res.status === 200) {\r\n                setUserPermissions(2);\r\n            }\r\n        });\r\n    }\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6\">\r\n                    <ServerThumbnail serverId={params.serverId}/>\r\n                </div>\r\n                <div className=\"text-center align-middle col-md-6\">\r\n                    {loadedSecurities ?\r\n                        ((userPermissions === 1) && (serverSecurities.allowJoin === 0)) ?\r\n                            <button type=\"button\" onClick={joinServer} className=\"px-5 my-2 btn-lg btn-outline-primary\">Join Server</button>\r\n                        : <div className=\"my-auto\"> Status: {Constants.USER_STATUS[userPermissions]} </div>\r\n                    : \"\"}\r\n                </div>\r\n            </div>\r\n             \r\n            <div className=\"row gy-4 mx-auto pt-3\">\r\n                {loadedSecurities && userPermissions >= 2 ?\r\n                    <NewPostThumbnail serverId={params.serverId}/>\r\n                : \"\"}\r\n                {postIds ?\r\n                    <div>\r\n                        {postIds.map((el, i) => (\r\n                            <PostThumbnail postObject={el} key={el._id}/>\r\n                        ))}\r\n                    </div>\r\n                : (loadedPosts ? \"You do not have permission to view these posts\" : <Loading/>)}\r\n            </div> \r\n            \r\n        </div>\r\n    )\r\n} \r\n\r\nexport default Main;"]},"metadata":{},"sourceType":"module"}